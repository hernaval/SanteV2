{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\Projets\\\\Acadys\\\\best4sante\\\\SanteV2\\\\node_modules\\\\react-native-super-grid\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { chunkArray } from \"./utils\";\nimport SuperGridSectionList from \"./SuperGridSectionList\";\n\nvar SuperGrid = function (_Component) {\n  _inherits(SuperGrid, _Component);\n\n  var _super = _createSuper(SuperGrid);\n\n  function SuperGrid(props) {\n    var _this;\n\n    _classCallCheck(this, SuperGrid);\n\n    _this = _super.call(this, props);\n    _this.renderRow = _this.renderRow.bind(_assertThisInitialized(_this));\n    _this.onLayout = _this.onLayout.bind(_assertThisInitialized(_this));\n    _this.getDimensions = _this.getDimensions.bind(_assertThisInitialized(_this));\n    _this.state = _this.getDimensions();\n    return _this;\n  }\n\n  _createClass(SuperGrid, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.itemDimension !== this.props.itemDimension) {\n        this.setState(_objectSpread({}, this.getDimensions(this.state.totalDimension, nextProps.itemDimension)));\n      }\n    }\n  }, {\n    key: \"onLayout\",\n    value: function onLayout(e) {\n      var _this$props = this.props,\n          staticDimension = _this$props.staticDimension,\n          horizontal = _this$props.horizontal,\n          onLayout = _this$props.onLayout;\n\n      if (!staticDimension) {\n        var _ref = e.nativeEvent.layout || {},\n            width = _ref.width,\n            height = _ref.height;\n\n        this.setState(_objectSpread({}, this.getDimensions(horizontal ? height : width)));\n      }\n\n      if (onLayout) {\n        onLayout(e);\n      }\n    }\n  }, {\n    key: \"getDimensions\",\n    value: function getDimensions(lvDimension, itemDim) {\n      var _this$props2 = this.props,\n          itemWidth = _this$props2.itemWidth,\n          spacing = _this$props2.spacing,\n          fixed = _this$props2.fixed,\n          staticDimension = _this$props2.staticDimension,\n          horizontal = _this$props2.horizontal;\n      var itemDimension = itemDim || this.props.itemDimension;\n\n      if (itemWidth) {\n        itemDimension = itemWidth;\n        console.warn('React Native Super Grid - property \"itemWidth\" is depreciated. Use \"itemDimension\" instead.');\n      }\n\n      var dimension = horizontal ? 'height' : 'width';\n      var totalDimension = lvDimension || staticDimension || Dimensions.get('window')[dimension];\n      var itemTotalDimension = itemDimension + spacing;\n      var availableDimension = totalDimension - spacing;\n      var itemsPerRow = Math.floor(availableDimension / itemTotalDimension);\n      var containerDimension = availableDimension / itemsPerRow;\n      return {\n        totalDimension: totalDimension,\n        itemDimension: itemDimension,\n        spacing: spacing,\n        itemsPerRow: itemsPerRow,\n        containerDimension: containerDimension,\n        fixed: fixed\n      };\n    }\n  }, {\n    key: \"renderVerticalRow\",\n    value: function renderVerticalRow(data) {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          itemDimension = _this$state.itemDimension,\n          spacing = _this$state.spacing,\n          containerDimension = _this$state.containerDimension,\n          fixed = _this$state.fixed,\n          itemsPerRow = _this$state.itemsPerRow;\n      var rowStyle = {\n        flexDirection: 'column',\n        paddingTop: spacing,\n        paddingRight: spacing\n      };\n\n      if (data.isLast) {\n        rowStyle.marginRight = spacing;\n      }\n\n      var itemContainerStyle = _objectSpread({\n        justifyContent: 'center',\n        height: containerDimension,\n        paddingBottom: spacing\n      }, this.props.itemContainerStyle);\n\n      var itemStyle = {};\n\n      if (fixed) {\n        itemStyle = {\n          height: itemDimension,\n          justifyContent: 'center'\n        };\n        delete itemContainerStyle.paddingBottom;\n      }\n\n      return React.createElement(View, {\n        style: rowStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }, (data || []).map(function (item, i) {\n        return React.createElement(View, {\n          key: data.key + \"_\" + i,\n          style: itemContainerStyle,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: itemStyle,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }\n        }, _this2.props.renderItem(item, i + data.rowNumber * itemsPerRow)));\n      }));\n    }\n  }, {\n    key: \"renderHorizontalRow\",\n    value: function renderHorizontalRow(data) {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          itemDimension = _this$state2.itemDimension,\n          containerDimension = _this$state2.containerDimension,\n          spacing = _this$state2.spacing,\n          fixed = _this$state2.fixed,\n          itemsPerRow = _this$state2.itemsPerRow;\n      var rowStyle = {\n        flexDirection: 'row',\n        paddingLeft: spacing,\n        paddingBottom: spacing\n      };\n\n      if (data.isLast) {\n        rowStyle.marginBottom = spacing;\n      }\n\n      var itemContainerStyle = _objectSpread({\n        flexDirection: 'column',\n        justifyContent: 'center',\n        width: containerDimension,\n        paddingRight: spacing\n      }, this.props.itemContainerStyle);\n\n      var itemStyle = {};\n\n      if (fixed) {\n        itemStyle = {\n          width: itemDimension,\n          alignSelf: 'center'\n        };\n      }\n\n      return React.createElement(View, {\n        style: rowStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }\n      }, (data || []).map(function (item, i) {\n        return React.createElement(View, {\n          key: data.key + \"_\" + i,\n          style: itemContainerStyle,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: itemStyle,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }\n        }, _this3.props.renderItem(item, i + data.rowNumber * itemsPerRow)));\n      }));\n    }\n  }, {\n    key: \"renderRow\",\n    value: function renderRow(_ref2) {\n      var item = _ref2.item;\n      var horizontal = this.props.horizontal;\n\n      if (horizontal) {\n        return this.renderVerticalRow(item);\n      }\n\n      return this.renderHorizontalRow(item);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          items = _this$props3.items,\n          style = _this$props3.style,\n          spacing = _this$props3.spacing,\n          fixed = _this$props3.fixed,\n          itemDimension = _this$props3.itemDimension,\n          renderItem = _this$props3.renderItem,\n          horizontal = _this$props3.horizontal,\n          onLayout = _this$props3.onLayout,\n          props = _objectWithoutProperties(_this$props3, [\"items\", \"style\", \"spacing\", \"fixed\", \"itemDimension\", \"renderItem\", \"horizontal\", \"onLayout\"]);\n\n      var itemsPerRow = this.state.itemsPerRow;\n      var chunked = chunkArray(items, itemsPerRow);\n      var rows = chunked.map(function (r, i) {\n        var keydRow = _toConsumableArray(r);\n\n        keydRow.key = \"row_\" + i;\n        keydRow.rowNumber = i;\n        keydRow.isLast = chunked.length - 1 === i;\n        return keydRow;\n      });\n      return React.createElement(FlatList, _extends({\n        data: rows,\n        renderItem: this.renderRow,\n        style: [_objectSpread({}, horizontal ? {\n          paddingLeft: spacing\n        } : {\n          paddingTop: spacing\n        }), style],\n        onLayout: this.onLayout\n      }, props, {\n        horizontal: horizontal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return SuperGrid;\n}(Component);\n\nSuperGrid.propTypes = {\n  renderItem: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n  itemDimension: PropTypes.number,\n  itemWidth: PropTypes.number,\n  fixed: PropTypes.bool,\n  spacing: PropTypes.number,\n  style: ViewPropTypes.style,\n  itemContainerStyle: ViewPropTypes.style,\n  staticDimension: PropTypes.number,\n  horizontal: PropTypes.bool,\n  onLayout: PropTypes.func\n};\nSuperGrid.defaultProps = {\n  fixed: false,\n  itemDimension: 120,\n  itemWidth: null,\n  spacing: 10,\n  style: {},\n  itemContainerStyle: undefined,\n  staticDimension: undefined,\n  horizontal: false\n};\nexport default SuperGrid;\nexport { SuperGridSectionList };","map":{"version":3,"sources":["E:/Projets/Acadys/best4sante/SanteV2/node_modules/react-native-super-grid/index.js"],"names":["React","Component","PropTypes","ViewPropTypes","chunkArray","SuperGridSectionList","SuperGrid","props","renderRow","bind","onLayout","getDimensions","state","nextProps","itemDimension","setState","totalDimension","e","staticDimension","horizontal","nativeEvent","layout","width","height","lvDimension","itemDim","itemWidth","spacing","fixed","console","warn","dimension","Dimensions","get","itemTotalDimension","availableDimension","itemsPerRow","Math","floor","containerDimension","data","rowStyle","flexDirection","paddingTop","paddingRight","isLast","marginRight","itemContainerStyle","justifyContent","paddingBottom","itemStyle","map","item","i","key","renderItem","rowNumber","paddingLeft","marginBottom","alignSelf","renderVerticalRow","renderHorizontalRow","items","style","chunked","rows","r","keydRow","length","propTypes","func","isRequired","arrayOf","any","number","bool","defaultProps","undefined"],"mappings":"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","sourcesContent":["/* eslint react/no-array-index-key: 0 */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, Dimensions, ViewPropTypes, FlatList } from 'react-native';\nimport { chunkArray } from './utils';\nimport SuperGridSectionList from './SuperGridSectionList'\n\nclass SuperGrid extends Component {\n  constructor(props) {\n    super(props);\n    this.renderRow = this.renderRow.bind(this);\n    this.onLayout = this.onLayout.bind(this);\n    this.getDimensions = this.getDimensions.bind(this);\n    this.state = this.getDimensions();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.itemDimension !== this.props.itemDimension) {\n      this.setState({\n        ...this.getDimensions(this.state.totalDimension, nextProps.itemDimension),\n      });\n    }\n  }\n\n  onLayout(e) {\n    const { staticDimension, horizontal, onLayout } = this.props;\n    if (!staticDimension) {\n      const { width, height } = e.nativeEvent.layout || {};\n\n      this.setState({\n        ...this.getDimensions(horizontal ? height : width),\n      });\n    }\n    // run onLayout callback if provided\n    if (onLayout) {\n      onLayout(e);\n    }\n  }\n\n  getDimensions(lvDimension, itemDim) {\n    const { itemWidth, spacing, fixed, staticDimension, horizontal } = this.props;\n    let itemDimension = itemDim || this.props.itemDimension;\n    if (itemWidth) {\n      itemDimension = itemWidth;\n      console.warn('React Native Super Grid - property \"itemWidth\" is depreciated. Use \"itemDimension\" instead.');\n    }\n\n    const dimension = horizontal ? 'height' : 'width';\n    const totalDimension = lvDimension || staticDimension || Dimensions.get('window')[dimension];\n    const itemTotalDimension = itemDimension + spacing;\n    const availableDimension = totalDimension - spacing; // One spacing extra\n    const itemsPerRow = Math.floor(availableDimension / itemTotalDimension);\n    const containerDimension = availableDimension / itemsPerRow;\n\n    return {\n      totalDimension,\n      itemDimension,\n      spacing,\n      itemsPerRow,\n      containerDimension,\n      fixed,\n    };\n  }\n\n  renderVerticalRow(data) {\n    const { itemDimension, spacing, containerDimension, fixed, itemsPerRow } = this.state;\n    const rowStyle = {\n      flexDirection: 'column',\n      paddingTop: spacing,\n      paddingRight: spacing,\n    };\n    if (data.isLast) {\n      rowStyle.marginRight = spacing;\n    }\n    const itemContainerStyle = {\n      justifyContent: 'center',\n      height: containerDimension,\n      paddingBottom: spacing,\n      ...this.props.itemContainerStyle\n    };\n    let itemStyle = {};\n    if (fixed) {\n      itemStyle = {\n        height: itemDimension,\n        justifyContent: 'center',\n      };\n      delete itemContainerStyle.paddingBottom;\n    }\n\n    return (\n      <View style={rowStyle}>\n        {(data || []).map((item, i) => (\n          <View key={`${data.key}_${i}`} style={itemContainerStyle}>\n            <View style={itemStyle}>\n              {this.props.renderItem(item, i + (data.rowNumber * itemsPerRow))}\n            </View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  renderHorizontalRow(data) {\n    const { itemDimension, containerDimension, spacing, fixed, itemsPerRow } = this.state;\n    const rowStyle = {\n      flexDirection: 'row',\n      paddingLeft: spacing,\n      paddingBottom: spacing,\n    };\n    if (data.isLast) {\n      rowStyle.marginBottom = spacing;\n    }\n    const itemContainerStyle = {\n      flexDirection: 'column',\n      justifyContent: 'center',\n      width: containerDimension,\n      paddingRight: spacing,\n      ...this.props.itemContainerStyle\n    };\n    let itemStyle = {};\n    if (fixed) {\n      itemStyle = {\n        width: itemDimension,\n        alignSelf: 'center',\n      };\n    }\n\n    return (\n      <View style={rowStyle}>\n        {(data || []).map((item, i) => (\n          <View key={`${data.key}_${i}`} style={itemContainerStyle}>\n            <View style={itemStyle}>\n              {this.props.renderItem(item, i + (data.rowNumber * itemsPerRow))}\n            </View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  renderRow({ item }) { // item is array of items which go in one row\n    const { horizontal } = this.props;\n    if (horizontal) {\n      return this.renderVerticalRow(item);\n    }\n    return this.renderHorizontalRow(item);\n  }\n\n  render() {\n    const { items, style, spacing, fixed, itemDimension, renderItem,\n      horizontal, onLayout, ...props } = this.props;\n    const { itemsPerRow } = this.state;\n\n    const chunked = chunkArray(items, itemsPerRow); //Splitting the data into rows\n\n    //Adding metadata to these rows\n    const rows = chunked.map((r, i) => {\n      const keydRow = [...r];\n      keydRow.key = `row_${i}`;\n      keydRow.rowNumber = i; //Assigning a row number to each row to allow proper indexing later\n      keydRow.isLast = (chunked.length - 1 === i);\n      return keydRow;\n    });\n\n    return (\n      <FlatList\n        data={rows}\n        renderItem={this.renderRow}\n        style={[\n          { ...horizontal ? { paddingLeft: spacing } : { paddingTop: spacing } },\n          style,\n        ]}\n        onLayout={this.onLayout}\n        {...props}\n        horizontal={horizontal}\n      />\n    );\n  }\n}\n\nSuperGrid.propTypes = {\n  renderItem: PropTypes.func.isRequired,\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n  itemDimension: PropTypes.number,\n  itemWidth: PropTypes.number, // for backward compatibility\n  fixed: PropTypes.bool,\n  spacing: PropTypes.number,\n  style: ViewPropTypes.style,\n  itemContainerStyle: ViewPropTypes.style,\n  staticDimension: PropTypes.number,\n  horizontal: PropTypes.bool,\n  onLayout: PropTypes.func,\n};\n\nSuperGrid.defaultProps = {\n  fixed: false,\n  itemDimension: 120,\n  itemWidth: null,\n  spacing: 10,\n  style: {},\n  itemContainerStyle: undefined,\n  staticDimension: undefined,\n  horizontal: false,\n};\n\nexport default SuperGrid;\nexport { SuperGridSectionList };\n"]},"metadata":{},"sourceType":"module"}