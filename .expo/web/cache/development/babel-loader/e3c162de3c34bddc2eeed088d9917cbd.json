{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\Projets\\\\Acadys\\\\best4sante\\\\SanteV2\\\\assets\\\\Screens\\\\Contacts\\\\MyContact.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport TopMenu from \"../../component/Menu/TopMenu\";\nimport BottomMenu from \"../../component/Menu/BottomMenu\";\nimport { Avatar, Divider, ListItem, Input } from 'react-native-elements';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport ActionButton from 'react-native-action-button';\nimport { addContact, deleteContact } from \"../../Action\";\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faPhone, faTrash, faEye } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport Bdd from \"../../API/Bdd\";\nimport BottomSheet from 'react-native-simple-bottom-sheet';\n\nvar MyContact = function (_Component) {\n  _inherits(MyContact, _Component);\n\n  var _super = _createSuper(MyContact);\n\n  function MyContact() {\n    var _this;\n\n    _classCallCheck(this, MyContact);\n\n    _this = _super.call(this);\n\n    _this.renderInfo = function () {\n      return React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\"\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }, _this.state.isModifbegin === false && React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.setState({\n            isModifbegin: true\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, React.createElement(Avatar, {\n        size: \"medium\",\n        rounded: true,\n        overlayContainerStyle: {\n          backgroundColor: \"#008AC8\"\n        },\n        icon: {\n          name: 'pencil',\n          type: 'font-awesome'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }\n      })), _this.state.isModifbegin === true && React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this.setState({\n            isModifbegin: false\n          });\n\n          _this.saveChange();\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }\n      }, React.createElement(Avatar, {\n        size: \"medium\",\n        rounded: true,\n        overlayContainerStyle: {\n          backgroundColor: \"#008AC8\"\n        },\n        icon: {\n          name: 'save',\n          type: 'font-awesome'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }\n      }))), React.createElement(Text, {\n        style: styles.labelText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      }, \"Pr\\xE9nom\"), _this.state.isModifbegin === true && React.createElement(Input, {\n        onChangeText: function onChangeText(value) {\n          return _this.setState({\n            prenom: value\n          });\n        },\n        value: _this.state.prenom,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 54\n        }\n      }), _this.state.isModifbegin === false && React.createElement(Text, {\n        style: styles.labelValue,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }\n      }, _this.state.prenom), React.createElement(Text, {\n        style: styles.labelText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }, \"Nom\"), _this.state.isModifbegin === true && React.createElement(Input, {\n        onChangeText: function onChangeText(value) {\n          return _this.setState({\n            nom: value\n          });\n        },\n        value: _this.state.nom,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 54\n        }\n      }), _this.state.isModifbegin === false && React.createElement(Text, {\n        style: styles.labelValue,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }\n      }, _this.state.nom), React.createElement(Text, {\n        style: styles.labelText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, \"Email\"), _this.state.isModifbegin === true && React.createElement(Input, {\n        onChangeText: function onChangeText(value) {\n          return _this.setState({\n            email: value\n          });\n        },\n        value: _this.state.email,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 54\n        }\n      }), _this.state.isModifbegin === false && React.createElement(Text, {\n        style: styles.labelValue,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }\n      }, _this.state.email), React.createElement(Text, {\n        style: styles.labelText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }\n      }, \"Num\\xE9ro\"), _this.state.isModifbegin === true && React.createElement(Input, {\n        onChangeText: function onChangeText(value) {\n          return _this.setState({\n            num: value\n          });\n        },\n        value: data.numContact,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 54\n        }\n      }), _this.state.isModifbegin === false && React.createElement(Text, {\n        style: styles.labelValue,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }\n      }, _this.state.num));\n    };\n\n    _this.state = {\n      contacts: [],\n      contactIdSelected: {},\n      isModifbegin: false,\n      id: \"\",\n      nom: \"\",\n      prenom: \"\",\n      email: \"\",\n      num: \"\"\n    };\n    _this.panelRef = React.createRef();\n    _this.showRenderInfo = false;\n    return _this;\n  }\n\n  _createClass(MyContact, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.fetchContact();\n      this._subscribe = this.props.navigation.addListener('didFocus', function _callee() {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this2.fetchContact();\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    }\n  }, {\n    key: \"fetchContact\",\n    value: function fetchContact() {\n      var _this3 = this;\n\n      var idUser = this.props.user.user.idUser;\n      axios.get(Bdd.api_url + \"/contact/list?idUser=\" + idUser).then(function (res) {\n        _this3.setState({\n          contacts: res.data.data\n        });\n      });\n    }\n  }, {\n    key: \"callPerson\",\n    value: function callPerson(phone) {\n      var url;\n\n      if (Platform.OS === 'ios') {\n        url = 'tel://' + phone;\n      } else if (Platform.OS === 'android') {\n        url = 'tel:' + phone;\n      }\n\n      Linking.canOpenURL(url).then(function (supported) {\n        if (supported) {\n          return Linking.openURL(url).catch(function () {\n            return null;\n          });\n        }\n      });\n    }\n  }, {\n    key: \"onClickDelete\",\n    value: function onClickDelete(id) {\n      this.props.deleteContact(id);\n      this.fetchContact();\n    }\n  }, {\n    key: \"saveChange\",\n    value: function saveChange() {\n      var data = {\n        nomContact: this.state.nom,\n        prenomContact: this.state.prenom,\n        numContact: this.state.num,\n        emailContact: this.state.email\n      };\n      var idContact = this.state.id;\n      axios.put(Bdd.api_url + \"/\" + idContact, data).then(function (_) {});\n    }\n  }, {\n    key: \"changeSelected\",\n    value: function changeSelected(id) {\n      var contact = this.state.contacts.filter(function (el) {\n        return el.idContact == id;\n      });\n      this.setState({\n        id: contact[0].idContact,\n        nom: contact[0].nomContact,\n        prenom: contact[0].prenomContact,\n        email: contact[0].emailContact,\n        num: contact[0].numContact\n      });\n      this.showRenderInfo = true;\n    }\n  }, {\n    key: \"toggleInfo\",\n    value: function toggleInfo(props) {\n      var show = props.isShow;\n\n      if (show) {\n        return React.createElement(this.showInfo, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 20\n          }\n        });\n      }\n    }\n  }, {\n    key: \"showInfo\",\n    value: function showInfo() {\n      var _this4 = this;\n\n      if (this.showRenderInfo) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"flex-end\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }\n        }, this.state.isModifbegin === false && React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this4.setState({\n              isModifbegin: true\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }\n        }, React.createElement(Avatar, {\n          size: \"small\",\n          rounded: true,\n          overlayContainerStyle: {\n            backgroundColor: \"#008AC8\"\n          },\n          icon: {\n            name: 'pencil',\n            type: 'font-awesome'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }\n        })), this.state.isModifbegin === true && React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            _this4.setState({\n              isModifbegin: false\n            });\n\n            _this4.saveChange();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }\n        }, React.createElement(Avatar, {\n          size: \"small\",\n          rounded: true,\n          overlayContainerStyle: {\n            backgroundColor: \"#008AC8\"\n          },\n          icon: {\n            name: 'save',\n            type: 'font-awesome'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }\n        }))), React.createElement(Text, {\n          style: styles.labelText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }\n        }, \"Pr\\xE9nom\"), this.state.isModifbegin === true && React.createElement(Input, {\n          onChangeText: function onChangeText(value) {\n            return _this4.setState({\n              prenom: value\n            });\n          },\n          value: this.state.prenom,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 54\n          }\n        }), this.state.isModifbegin === false && React.createElement(Text, {\n          style: styles.labelValue,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }\n        }, this.state.prenom), React.createElement(Text, {\n          style: styles.labelText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }\n        }, \"Nom\"), this.state.isModifbegin === true && React.createElement(Input, {\n          onChangeText: function onChangeText(value) {\n            return _this4.setState({\n              nom: value\n            });\n          },\n          value: this.state.nom,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 54\n          }\n        }), this.state.isModifbegin === false && React.createElement(Text, {\n          style: styles.labelValue,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }\n        }, this.state.nom), React.createElement(Text, {\n          style: styles.labelText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }\n        }, \"Email\"), this.state.isModifbegin === true && React.createElement(Input, {\n          onChangeText: function onChangeText(value) {\n            return _this4.setState({\n              email: value\n            });\n          },\n          value: this.state.email,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 54\n          }\n        }), this.state.isModifbegin === false && React.createElement(Text, {\n          style: styles.labelValue,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }\n        }, this.state.email), React.createElement(Text, {\n          style: styles.labelText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }\n        }, \"Num\\xE9ro\"), this.state.isModifbegin === true && React.createElement(Input, {\n          keyboardType: \"numeric\",\n          onChangeText: function onChangeText(value) {\n            return _this4.setState({\n              num: value\n            });\n          },\n          value: this.state.num,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 54\n          }\n        }), this.state.isModifbegin === false && React.createElement(Text, {\n          style: styles.labelValue,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }\n        }, this.state.num));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var list = [{\n        title: 'Appointments',\n        icon: 'av-timer'\n      }, {\n        title: 'Trips',\n        icon: 'flight-takeoff'\n      }];\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: Platform.OS === 'ios' ? styles.under_ios : styles.under,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }\n      }, React.createElement(TopMenu, {\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.contactHeader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }\n      }, React.createElement(Avatar, {\n        rounded: true,\n        size: \"large\",\n        title: \"HR\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.contactHeaderText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }\n      }, \"Mes contacts d'urgence\"))), React.createElement(Divider, {\n        style: {\n          backgroundColor: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }\n      }), React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 17\n        }\n      }, this.state.contacts.map(function (contact, i) {\n        var iniital = contact.nomContact[0] + \"\" + contact.prenomContact[0];\n        return React.createElement(ListItem, {\n          containerStyle: {\n            margin: 10\n          },\n          key: i,\n          title: contact.nomContact,\n          subtitle: contact.emailContact,\n          leftAvatar: {\n            title: iniital\n          },\n          bottomDivider: true,\n          rightElement: React.createElement(React.Fragment, {\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 41\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: {\n              padding: 10\n            },\n            onPress: function onPress() {\n              _this5.panelRef.current.togglePanel();\n\n              _this5.changeSelected(contact.idContact);\n            },\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 45\n            }\n          }, React.createElement(FontAwesomeIcon, {\n            icon: faEye,\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 49\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: {\n              padding: 10\n            },\n            onPress: function onPress() {\n              return _this5.callPerson(contact.numContact);\n            },\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 45\n            }\n          }, React.createElement(FontAwesomeIcon, {\n            icon: faPhone,\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 49\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: {\n              padding: 10\n            },\n            onPress: function onPress() {\n              return _this5.onClickDelete(contact.idContact);\n            },\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 45\n            }\n          }, React.createElement(FontAwesomeIcon, {\n            icon: faTrash,\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 49\n            }\n          }))),\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 33\n          }\n        });\n      })), React.createElement(ActionButton, {\n        onPress: function onPress() {\n          return _this5.props.navigation.navigate(\"NewContact\");\n        },\n        style: {\n          marginBottom: 20\n        },\n        buttonColor: \"#008AC8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }\n      }), React.createElement(BottomSheet, {\n        isOpen: true,\n        sliderMinHeight: 0,\n        ref: function ref(_ref) {\n          return _this5.panelRef.current = _ref;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 17\n        }\n      }, this.showInfo()));\n    }\n  }]);\n\n  return MyContact;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  contactHeader: {\n    flexDirection: \"row\",\n    padding: 15,\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  },\n  contactHeaderText: {\n    fontWeight: \"bold\",\n    fontSize: 20\n  },\n  labelText: {\n    fontWeight: \"bold\",\n    fontSize: 16\n  },\n  labelValue: {\n    color: \"gray\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    user: store.user,\n    contact: store.contact\n  };\n};\n\nvar mapDispatchToProps = {\n  deleteContact: deleteContact\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MyContact);","map":{"version":3,"sources":["E:/Projets/Acadys/best4sante/SanteV2/assets/Screens/Contacts/MyContact.js"],"names":["React","Component","TopMenu","BottomMenu","Avatar","Divider","ListItem","Input","TouchableOpacity","ActionButton","addContact","deleteContact","connect","FontAwesomeIcon","faPhone","faTrash","faEye","axios","Bdd","BottomSheet","MyContact","renderInfo","flexDirection","justifyContent","state","isModifbegin","setState","backgroundColor","name","type","saveChange","styles","labelText","value","prenom","labelValue","nom","email","num","data","numContact","contacts","contactIdSelected","id","panelRef","createRef","showRenderInfo","fetchContact","_subscribe","props","navigation","addListener","idUser","user","get","api_url","then","res","phone","url","Platform","OS","Linking","canOpenURL","supported","openURL","catch","nomContact","prenomContact","emailContact","idContact","put","_","contact","filter","el","show","isShow","list","title","icon","container","under_ios","under","contactHeader","contactHeaderText","map","i","iniital","margin","padding","current","togglePanel","changeSelected","callPerson","onClickDelete","navigate","marginBottom","ref","showInfo","StyleSheet","create","flex","alignItems","fontWeight","fontSize","color","mapStateToProps","store","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Text, View, StyleSheet, ScrollView, Linking } from 'react-native'\r\nimport TopMenu from \"../../component/Menu/TopMenu\"\r\nimport BottomMenu from \"../../component/Menu/BottomMenu\"\r\nimport { Avatar, Divider, ListItem, Input } from 'react-native-elements';\r\n\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport ActionButton from 'react-native-action-button';\r\nimport { addContact, deleteContact } from \"../../Action\"\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\r\nimport { faPhone, faTrash, faEye } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport Bdd from \"../../API/Bdd\"\r\nimport BottomSheet from 'react-native-simple-bottom-sheet';\r\n\r\nclass MyContact extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            contacts: [],\r\n            contactIdSelected: {},\r\n            isModifbegin: false,\r\n            id: \"\",\r\n            nom: \"\",\r\n            prenom: \"\",\r\n            email: \"\",\r\n            num: \"\"\r\n        }\r\n        this.panelRef = React.createRef()\r\n        this.showRenderInfo = false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchContact()\r\n\r\n        this._subscribe = this.props.navigation.addListener('didFocus', async () => {\r\n            this.fetchContact()\r\n       });\r\n    }\r\n\r\n    fetchContact() {\r\n        const idUser = this.props.user.user.idUser\r\n        axios.get(`${Bdd.api_url}/contact/list?idUser=${idUser}`)\r\n            .then(res => {\r\n                this.setState({ contacts: res.data.data })\r\n            })\r\n    }\r\n\r\n    callPerson(phone) {\r\n        let url;\r\n        if (Platform.OS === 'ios') {\r\n            url = 'tel://' + phone\r\n        }\r\n        else if (Platform.OS === 'android') {\r\n            url = 'tel:' + phone\r\n\r\n        }\r\n\r\n        Linking.canOpenURL(url)\r\n            .then((supported) => {\r\n                if (supported) {\r\n                    return Linking.openURL(url)\r\n                        .catch(() => null);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    onClickDelete(id) {\r\n\r\n        this.props.deleteContact(id);\r\n        this.fetchContact()\r\n    }\r\n\r\n    saveChange() {\r\n        let data = {\r\n            nomContact: this.state.nom,\r\n            prenomContact: this.state.prenom,\r\n            numContact: this.state.num,\r\n            emailContact: this.state.email\r\n        }\r\n        let idContact = this.state.id\r\n        axios.put(`${Bdd.api_url}/${idContact}`, data)\r\n            .then(_ => {\r\n\r\n            })\r\n    }\r\n\r\n    changeSelected(id) {\r\n\r\n        let contact = this.state.contacts.filter(el => {\r\n            return el.idContact == id\r\n        })\r\n\r\n        this.setState({\r\n            id: contact[0].idContact,\r\n            nom: contact[0].nomContact,\r\n            prenom: contact[0].prenomContact,\r\n            email: contact[0].emailContact,\r\n            num: contact[0].numContact\r\n        })\r\n        this.showRenderInfo = true\r\n    }\r\n\r\n    toggleInfo(props) {\r\n        const show = props.isShow\r\n        if(show) {\r\n            return <this.showInfo/>\r\n        }\r\n    }\r\n\r\n    showInfo() {\r\n        if (this.showRenderInfo) {\r\n        return (<View>\r\n\r\n            <View style={{ flexDirection: \"row\", justifyContent: \"flex-end\" }}>\r\n                {this.state.isModifbegin === false &&\r\n                    <TouchableOpacity onPress={() => this.setState({ isModifbegin: true })}>\r\n                        <Avatar size=\"small\" rounded overlayContainerStyle={{ backgroundColor: \"#008AC8\" }} icon={{ name: 'pencil', type: 'font-awesome' }} />\r\n\r\n                    </TouchableOpacity>\r\n                }\r\n                {this.state.isModifbegin === true &&\r\n                    <TouchableOpacity onPress={() => {\r\n                        this.setState({ isModifbegin: false })\r\n                        this.saveChange()\r\n                    }}>\r\n                        <Avatar size=\"small\" rounded overlayContainerStyle={{ backgroundColor: \"#008AC8\" }} icon={{ name: 'save', type: 'font-awesome' }} />\r\n\r\n                    </TouchableOpacity>\r\n                }\r\n            </View>\r\n          \r\n                <Text style={styles.labelText}>Prénom</Text>\r\n                {this.state.isModifbegin === true && <Input\r\n                    onChangeText={(value) => this.setState({ prenom: value })}\r\n                    value={this.state.prenom}\r\n                />\r\n                }\r\n                {this.state.isModifbegin === false &&\r\n                    <Text style={styles.labelValue}>{this.state.prenom}</Text>\r\n                }\r\n\r\n                <Text style={styles.labelText}>Nom</Text>\r\n                {this.state.isModifbegin === true && <Input\r\n                    onChangeText={(value) => this.setState({ nom: value })}\r\n                    value={this.state.nom}\r\n                />\r\n                }\r\n                {this.state.isModifbegin === false &&\r\n                    <Text style={styles.labelValue}>{this.state.nom}</Text>\r\n                }\r\n\r\n                <Text style={styles.labelText}>Email</Text>\r\n                {this.state.isModifbegin === true && <Input\r\n                    onChangeText={(value) => this.setState({ email: value })}\r\n                    value={this.state.email}\r\n                />\r\n                }\r\n                {this.state.isModifbegin === false &&\r\n                    <Text style={styles.labelValue}>{this.state.email}</Text>\r\n                }\r\n\r\n                <Text style={styles.labelText}>Numéro</Text>\r\n                {this.state.isModifbegin === true && <Input keyboardType=\"numeric\"\r\n                    onChangeText={(value) => this.setState({ num: value })}\r\n                    value={this.state.num}\r\n                />\r\n                }\r\n                {this.state.isModifbegin === false &&\r\n                    <Text style={styles.labelValue}>{this.state.num}</Text>\r\n                }\r\n        </View>)  \r\n    }\r\n    }\r\n\r\n\r\n    renderInfo = () => {\r\n        return (<View>\r\n\r\n            <View style={{ flexDirection: \"row\", justifyContent: \"flex-end\" }}>\r\n                {this.state.isModifbegin === false &&\r\n                    <TouchableOpacity onPress={() => this.setState({ isModifbegin: true })}>\r\n                        <Avatar size=\"medium\" rounded overlayContainerStyle={{ backgroundColor: \"#008AC8\" }} icon={{ name: 'pencil', type: 'font-awesome' }} />\r\n\r\n                    </TouchableOpacity>\r\n                }\r\n                {this.state.isModifbegin === true &&\r\n                    <TouchableOpacity onPress={() => {\r\n                        this.setState({ isModifbegin: false })\r\n                        this.saveChange()\r\n                    }}>\r\n                        <Avatar size=\"medium\" rounded overlayContainerStyle={{ backgroundColor: \"#008AC8\" }} icon={{ name: 'save', type: 'font-awesome' }} />\r\n\r\n                    </TouchableOpacity>\r\n                }\r\n            </View>\r\n          \r\n                <Text style={styles.labelText}>Prénom</Text>\r\n                {this.state.isModifbegin === true && <Input\r\n                    onChangeText={(value) => this.setState({ prenom: value })}\r\n                    value={this.state.prenom}\r\n                />\r\n                }\r\n                {this.state.isModifbegin === false &&\r\n                    <Text style={styles.labelValue}>{this.state.prenom}</Text>\r\n                }\r\n\r\n                <Text style={styles.labelText}>Nom</Text>\r\n                {this.state.isModifbegin === true && <Input\r\n                    onChangeText={(value) => this.setState({ nom: value })}\r\n                    value={this.state.nom}\r\n                />\r\n                }\r\n                {this.state.isModifbegin === false &&\r\n                    <Text style={styles.labelValue}>{this.state.nom}</Text>\r\n                }\r\n\r\n                <Text style={styles.labelText}>Email</Text>\r\n                {this.state.isModifbegin === true && <Input\r\n                    onChangeText={(value) => this.setState({ email: value })}\r\n                    value={this.state.email}\r\n                />\r\n                }\r\n                {this.state.isModifbegin === false &&\r\n                    <Text style={styles.labelValue}>{this.state.email}</Text>\r\n                }\r\n\r\n                <Text style={styles.labelText}>Numéro</Text>\r\n                {this.state.isModifbegin === true && <Input\r\n                    onChangeText={(value) => this.setState({ num: value })}\r\n                    value={data.numContact}\r\n                />\r\n                }\r\n                {this.state.isModifbegin === false &&\r\n                    <Text style={styles.labelValue}>{this.state.num}</Text>\r\n                }\r\n\r\n         \r\n\r\n\r\n\r\n        </View>)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        const list = [\r\n            {\r\n                title: 'Appointments',\r\n                icon: 'av-timer'\r\n            },\r\n            {\r\n                title: 'Trips',\r\n                icon: 'flight-takeoff'\r\n            },\r\n\r\n        ]\r\n        return (\r\n            <View style={styles.container}>\r\n\r\n                <View style={Platform.OS === 'ios' ? styles.under_ios : styles.under}>\r\n                    <TopMenu navigation={this.props.navigation} />\r\n                </View>\r\n                <View style={styles.contactHeader}>\r\n                    <View>\r\n\r\n                        <Avatar rounded size=\"large\" title=\"HR\" />\r\n\r\n                    </View>\r\n                    <View>\r\n                        <Text style={styles.contactHeaderText}>Mes contacts d'urgence</Text>\r\n                    </View>\r\n                </View>\r\n                <Divider style={{ backgroundColor: 'grey' }} />\r\n                <ScrollView>\r\n                    {\r\n                        this.state.contacts.map((contact, i) => {\r\n                            const iniital = contact.nomContact[0] + \"\" + contact.prenomContact[0]\r\n                            return (\r\n                                <ListItem\r\n                                    containerStyle={{ margin: 10 }}\r\n                                    key={i}\r\n                                    title={contact.nomContact}\r\n                                    subtitle={contact.emailContact}\r\n                                    leftAvatar={{\r\n\r\n                                        title: iniital\r\n                                    }}\r\n                                    bottomDivider\r\n                                    rightElement={\r\n                                        <React.Fragment>\r\n                                            <TouchableOpacity style={{ padding: 10 }} onPress={() => {\r\n                                                this.panelRef.current.togglePanel()\r\n                                                this.changeSelected(contact.idContact)\r\n                                            }}>\r\n                                                <FontAwesomeIcon icon={faEye} />\r\n                                            </TouchableOpacity>\r\n                                            <TouchableOpacity style={{ padding: 10 }} onPress={() => this.callPerson(contact.numContact)}>\r\n                                                <FontAwesomeIcon icon={faPhone} />\r\n                                            </TouchableOpacity>\r\n                                            <TouchableOpacity style={{ padding: 10 }} onPress={() => this.onClickDelete(contact.idContact)}>\r\n                                                <FontAwesomeIcon icon={faTrash} />\r\n                                            </TouchableOpacity>\r\n                                        </React.Fragment>\r\n                                    }\r\n                                />)\r\n                        })\r\n                    }\r\n\r\n                </ScrollView>\r\n                <ActionButton onPress={() => this.props.navigation.navigate(\"NewContact\")} style={{ marginBottom: 20 }} buttonColor=\"#008AC8\">\r\n\r\n                </ActionButton>\r\n                <BottomSheet isOpen={true} sliderMinHeight={0} ref={ref => this.panelRef.current = ref}>\r\n                    {this.showInfo()}\r\n                </BottomSheet>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1\r\n    },\r\n    contactHeader: {\r\n        flexDirection: \"row\",\r\n        padding: 15,\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\"\r\n    },\r\n    contactHeaderText: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 20\r\n    },\r\n\r\n    labelText: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 16\r\n    },\r\n    labelValue: {\r\n        color: \"gray\"\r\n    },\r\n\r\n\r\n\r\n})\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        user: store.user,\r\n        contact: store.contact,\r\n        /* favorite: store.favorite,\r\n        second: store.second */\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    deleteContact\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyContact)"]},"metadata":{},"sourceType":"module"}