{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Stenny Gabriel\\\\best4sante\\\\Best4Sante\\\\assets\\\\Screens\\\\Contacts\\\\MyContact.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport TopMenu from \"../../component/Menu/TopMenu\";\nimport BottomMenu from \"../../component/Menu/BottomMenu\";\nimport { Avatar, Divider, ListItem } from 'react-native-elements';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport ActionButton from 'react-native-action-button';\nimport { addContact, deleteContact } from \"../../Action\";\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faPhone, faTrash, faEye } from '@fortawesome/free-solid-svg-icons';\n\nvar MyContact = function (_Component) {\n  _inherits(MyContact, _Component);\n\n  var _super = _createSuper(MyContact);\n\n  function MyContact() {\n    _classCallCheck(this, MyContact);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyContact, [{\n    key: \"callPerson\",\n    value: function callPerson(phone) {\n      var url;\n\n      if (Platform.OS === 'ios') {\n        url = 'tel://' + phone;\n      } else if (Platform.OS === 'android') {\n        url = 'tel:' + phone;\n      }\n\n      Linking.canOpenURL(url).then(function (supported) {\n        if (supported) {\n          return Linking.openURL(url).catch(function () {\n            return null;\n          });\n        }\n      });\n    }\n  }, {\n    key: \"onClickDelete\",\n    value: function onClickDelete(index) {\n      var data = {\n        id: this.props.contact.contact.data.contacts[index].id,\n        user_id: this.props.user.user.data.user[0].id\n      };\n      this.props.deleteContact(data);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var list = [{\n        title: 'Appointments',\n        icon: 'av-timer'\n      }, {\n        title: 'Trips',\n        icon: 'flight-takeoff'\n      }];\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: Platform.OS === 'ios' ? styles.under_ios : styles.under,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, React.createElement(TopMenu, {\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.contactHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, React.createElement(Avatar, {\n        rounded: true,\n        size: \"large\",\n        title: \"HR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.contactHeaderText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, \"Mes contacts d'urgence\"))), React.createElement(Divider, {\n        style: {\n          backgroundColor: 'grey'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }), React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, this.props.contact.contact.data.contacts.map(function (contact, i) {\n        var iniital = contact.lastName[0] + \"\" + contact.firstName[0];\n        return React.createElement(ListItem, {\n          containerStyle: {\n            margin: 10\n          },\n          key: i,\n          title: contact.lastName,\n          subtitle: contact.email,\n          leftAvatar: {\n            title: iniital\n          },\n          bottomDivider: true,\n          rightElement: React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 41\n            }\n          }, React.createElement(TouchableOpacity, {\n            style: {\n              padding: 10\n            },\n            onPress: function onPress() {\n              return _this.props.navigation.navigate(\"ContactDetail\", {\n                contactId: contact.id\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 45\n            }\n          }, React.createElement(FontAwesomeIcon, {\n            icon: faEye,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 49\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: {\n              padding: 10\n            },\n            onPress: function onPress() {\n              return _this.callPerson(contact.phone);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 45\n            }\n          }, React.createElement(FontAwesomeIcon, {\n            icon: faPhone,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 49\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: {\n              padding: 10\n            },\n            onPress: function onPress() {\n              return _this.onClickDelete(i);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 45\n            }\n          }, React.createElement(FontAwesomeIcon, {\n            icon: faTrash,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 49\n            }\n          }))),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }\n        });\n      })), React.createElement(ActionButton, {\n        onPress: function onPress() {\n          return _this.props.navigation.navigate(\"NewContact\");\n        },\n        style: {\n          marginBottom: 5\n        },\n        buttonColor: \"#008AC8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return MyContact;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  contactHeader: {\n    flexDirection: \"row\",\n    padding: 15,\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  },\n  contactHeaderText: {\n    fontWeight: \"bold\",\n    fontSize: 20\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    user: store.user,\n    contact: store.contact,\n    favorite: store.favorite,\n    second: store.second\n  };\n};\n\nvar mapDispatchToProps = {\n  deleteContact: deleteContact\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MyContact);","map":{"version":3,"sources":["C:/Users/Stenny Gabriel/best4sante/Best4Sante/assets/Screens/Contacts/MyContact.js"],"names":["React","Component","TopMenu","BottomMenu","Avatar","Divider","ListItem","TouchableOpacity","ActionButton","addContact","deleteContact","connect","FontAwesomeIcon","faPhone","faTrash","faEye","MyContact","phone","url","Platform","OS","Linking","canOpenURL","then","supported","openURL","catch","index","data","id","props","contact","contacts","user_id","user","list","title","icon","styles","container","under_ios","under","navigation","contactHeader","contactHeaderText","backgroundColor","map","i","iniital","lastName","firstName","margin","email","padding","navigate","contactId","callPerson","onClickDelete","marginBottom","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","fontWeight","fontSize","mapStateToProps","store","favorite","second","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Text, View, StyleSheet, ScrollView, Linking } from 'react-native'\r\nimport TopMenu from \"../../component/Menu/TopMenu\"\r\nimport BottomMenu from \"../../component/Menu/BottomMenu\"\r\nimport { Avatar, Divider, ListItem } from 'react-native-elements';\r\n\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport ActionButton from 'react-native-action-button';\r\nimport { addContact, deleteContact } from \"../../Action\"\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\r\nimport { faPhone, faTrash, faEye } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass MyContact extends Component {\r\n\r\n    \r\n    callPerson(phone) {\r\n        let url;\r\n        if (Platform.OS === 'ios') {\r\n            url = 'tel://' + phone\r\n        }\r\n        else if (Platform.OS === 'android') {\r\n            url = 'tel:' + phone\r\n\r\n        }\r\n\r\n        Linking.canOpenURL(url)\r\n            .then((supported) => {\r\n                if (supported) {\r\n                    return Linking.openURL(url)\r\n                        .catch(() => null);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    onClickDelete(index) {\r\n        let data = {\r\n            id: this.props.contact.contact.data.contacts[index].id,\r\n            user_id: this.props.user.user.data.user[0].id\r\n        }\r\n\r\n        this.props.deleteContact(data);\r\n    }\r\n\r\n    render() {\r\n\r\n        const list = [\r\n            {\r\n                title: 'Appointments',\r\n                icon: 'av-timer'\r\n            },\r\n            {\r\n                title: 'Trips',\r\n                icon: 'flight-takeoff'\r\n            },\r\n\r\n        ]\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={Platform.OS === 'ios' ? styles.under_ios : styles.under}>\r\n                    <TopMenu navigation={this.props.navigation} />\r\n                </View>\r\n                <View style={styles.contactHeader}>\r\n                    <View>\r\n\r\n                        <Avatar rounded size=\"large\" title=\"HR\" />\r\n\r\n                    </View>\r\n                    <View>\r\n                        <Text style={styles.contactHeaderText}>Mes contacts d'urgence</Text>\r\n                    </View>\r\n                </View>\r\n                <Divider style={{ backgroundColor: 'grey' }} />\r\n                <ScrollView>\r\n                    {\r\n                        this.props.contact.contact.data.contacts.map((contact, i) => {\r\n                            const iniital = contact.lastName[0] + \"\" + contact.firstName[0]\r\n                            return (\r\n                                <ListItem\r\n                                    containerStyle={{ margin: 10 }}\r\n                                    key={i}\r\n                                    title={contact.lastName}\r\n                                    subtitle={contact.email}\r\n                                    leftAvatar={{\r\n\r\n                                        title: iniital\r\n                                    }}\r\n                                    bottomDivider\r\n                                    rightElement={\r\n                                        <React.Fragment>\r\n                                            <TouchableOpacity style={{ padding: 10 }} onPress={() => this.props.navigation.navigate(\"ContactDetail\",{contactId : contact.id})}>\r\n                                                <FontAwesomeIcon icon={faEye} />\r\n                                            </TouchableOpacity>\r\n                                            <TouchableOpacity style={{ padding: 10 }} onPress={() => this.callPerson(contact.phone)}>\r\n                                                <FontAwesomeIcon icon={faPhone} />\r\n                                            </TouchableOpacity>\r\n                                            <TouchableOpacity style={{ padding: 10 }} onPress={() => this.onClickDelete(i)}>\r\n                                                <FontAwesomeIcon icon={faTrash} />\r\n                                            </TouchableOpacity>\r\n                                        </React.Fragment>\r\n                                    }\r\n                                /> )\r\n                        })\r\n                    }\r\n\r\n                </ScrollView>\r\n                <ActionButton onPress={() => this.props.navigation.navigate(\"NewContact\")} style={{ marginBottom: 5 }} buttonColor=\"#008AC8\">\r\n\r\n                </ActionButton>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1\r\n    },\r\n    contactHeader: {\r\n        flexDirection: \"row\",\r\n        padding: 15,\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\"\r\n    },\r\n    contactHeaderText: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 20\r\n    }\r\n\r\n})\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        user: store.user,\r\n        contact: store.contact,\r\n        favorite: store.favorite,\r\n        second: store.second\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    deleteContact\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyContact)"]},"metadata":{},"sourceType":"module"}