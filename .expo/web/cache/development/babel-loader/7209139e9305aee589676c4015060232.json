{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Stenny Gabriel\\\\best4sante\\\\Best4Sante\\\\node_modules\\\\react-native-super-grid\\\\SuperGridSectionList.js\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport { chunkArray } from \"./utils\";\nimport cloneDeep from 'lodash/cloneDeep';\n\nvar SuperGridSectionList = function (_Component) {\n  _inherits(SuperGridSectionList, _Component);\n\n  var _super = _createSuper(SuperGridSectionList);\n\n  function SuperGridSectionList(props) {\n    var _this;\n\n    _classCallCheck(this, SuperGridSectionList);\n\n    _this = _super.call(this, props);\n    _this.onLayout = _this.onLayout.bind(_assertThisInitialized(_this));\n    _this.renderHorizontalRow = _this.renderHorizontalRow.bind(_assertThisInitialized(_this));\n    _this.getDimensions = _this.getDimensions.bind(_assertThisInitialized(_this));\n    _this.state = _this.getDimensions();\n    return _this;\n  }\n\n  _createClass(SuperGridSectionList, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.itemDimension !== this.props.itemDimension) {\n        this.setState(_objectSpread({}, this.getDimensions(this.state.totalDimension, nextProps.itemDimension)));\n      }\n    }\n  }, {\n    key: \"onLayout\",\n    value: function onLayout(e) {\n      var _this$props = this.props,\n          staticDimension = _this$props.staticDimension,\n          onLayout = _this$props.onLayout;\n\n      if (!staticDimension) {\n        var _ref = e.nativeEvent.layout || {},\n            width = _ref.width,\n            height = _ref.height;\n\n        this.setState(_objectSpread({}, this.getDimensions(width)));\n      }\n\n      if (onLayout) {\n        onLayout(e);\n      }\n    }\n  }, {\n    key: \"getDimensions\",\n    value: function getDimensions(lvDimension, itemDim) {\n      var _this$props2 = this.props,\n          itemWidth = _this$props2.itemWidth,\n          spacing = _this$props2.spacing,\n          fixed = _this$props2.fixed,\n          staticDimension = _this$props2.staticDimension;\n      var itemDimension = itemDim || this.props.itemDimension;\n\n      if (itemWidth) {\n        itemDimension = itemWidth;\n        console.warn('React Native Super Grid - property \"itemWidth\" is depreciated. Use \"itemDimension\" instead.');\n      }\n\n      var dimension = 'width';\n      var totalDimension = lvDimension || staticDimension || Dimensions.get('window')[dimension];\n      var itemTotalDimension = itemDimension + spacing;\n      var availableDimension = totalDimension - spacing;\n      var itemsPerRow = Math.floor(availableDimension / itemTotalDimension);\n      var containerDimension = availableDimension / itemsPerRow;\n      return {\n        totalDimension: totalDimension,\n        itemDimension: itemDimension,\n        spacing: spacing,\n        itemsPerRow: itemsPerRow,\n        containerDimension: containerDimension,\n        fixed: fixed\n      };\n    }\n  }, {\n    key: \"renderHorizontalRow\",\n    value: function renderHorizontalRow(_ref2) {\n      var _this2 = this;\n\n      var item = _ref2.item,\n          index = _ref2.index,\n          section = _ref2.section,\n          separators = _ref2.separators;\n      var _this$state = this.state,\n          itemDimension = _this$state.itemDimension,\n          containerDimension = _this$state.containerDimension,\n          spacing = _this$state.spacing,\n          fixed = _this$state.fixed,\n          sections = _this$state.sections,\n          itemsPerRow = _this$state.itemsPerRow;\n      var rowStyle = {\n        flexDirection: 'row',\n        paddingLeft: spacing,\n        paddingBottom: spacing\n      };\n\n      if (item.isLast) {\n        rowStyle.marginBottom = spacing;\n      }\n\n      var itemContainerStyle = {\n        flexDirection: 'column',\n        justifyContent: 'center',\n        width: containerDimension,\n        paddingRight: spacing\n      };\n      var itemStyle = {};\n\n      if (fixed) {\n        itemStyle = {\n          width: itemDimension,\n          alignSelf: 'center'\n        };\n      }\n\n      return React.createElement(View, {\n        style: rowStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }\n      }, (item || []).map(function (itemObject, i) {\n        return React.createElement(View, {\n          key: item.key + \"_\" + i,\n          style: itemContainerStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: itemStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }\n        }, _this2.props.renderItem({\n          item: itemObject,\n          index: i + item.rowNumber * itemsPerRow,\n          separators: separators,\n          section: section\n        })));\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          sections = _this$props3.sections,\n          style = _this$props3.style,\n          spacing = _this$props3.spacing,\n          fixed = _this$props3.fixed,\n          itemDimension = _this$props3.itemDimension,\n          renderItem = _this$props3.renderItem,\n          renderSectionHeader = _this$props3.renderSectionHeader,\n          onLayout = _this$props3.onLayout,\n          props = _objectWithoutProperties(_this$props3, [\"sections\", \"style\", \"spacing\", \"fixed\", \"itemDimension\", \"renderItem\", \"renderSectionHeader\", \"onLayout\"]);\n\n      var itemsPerRow = this.state.itemsPerRow;\n      var sectionsCopy = cloneDeep(sections);\n\n      var _loop = function _loop() {\n        var chunked = chunkArray(sectionsPair.data, itemsPerRow);\n        var rows = chunked.map(function (r, i) {\n          var keydRow = _toConsumableArray(r);\n\n          keydRow.key = \"row_\" + i;\n          keydRow.rowNumber = i;\n          keydRow.isLast = chunked.length - 1 === i;\n          return keydRow;\n        });\n        sectionsPair.data = rows;\n      };\n\n      for (var _iterator = _createForOfIteratorHelperLoose(sectionsCopy), _step; !(_step = _iterator()).done;) {\n        sectionsPair = _step.value;\n\n        _loop();\n      }\n\n      return React.createElement(SectionList, _extends({\n        sections: sectionsCopy,\n        renderSectionHeader: renderSectionHeader,\n        renderItem: this.renderHorizontalRow,\n        style: [{\n          paddingTop: spacing\n        }, style],\n        onLayout: this.onLayout\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return SuperGridSectionList;\n}(Component);\n\nSuperGridSectionList.propTypes = {\n  renderItem: PropTypes.func.isRequired,\n  sections: PropTypes.arrayOf(PropTypes.any).isRequired,\n  itemDimension: PropTypes.number,\n  itemWidth: PropTypes.number,\n  fixed: PropTypes.bool,\n  spacing: PropTypes.number,\n  style: ViewPropTypes.style,\n  staticDimension: PropTypes.number,\n  onLayout: PropTypes.func\n};\nSuperGridSectionList.defaultProps = {\n  fixed: false,\n  itemDimension: 120,\n  itemWidth: null,\n  spacing: 10,\n  style: {},\n  staticDimension: undefined\n};\nexport default SuperGridSectionList;","map":{"version":3,"sources":["C:/Users/Stenny Gabriel/best4sante/Best4Sante/node_modules/react-native-super-grid/SuperGridSectionList.js"],"names":["React","Component","PropTypes","chunkArray","cloneDeep","SuperGridSectionList","props","onLayout","bind","renderHorizontalRow","getDimensions","state","nextProps","itemDimension","setState","totalDimension","e","staticDimension","nativeEvent","layout","width","height","lvDimension","itemDim","itemWidth","spacing","fixed","console","warn","dimension","Dimensions","get","itemTotalDimension","availableDimension","itemsPerRow","Math","floor","containerDimension","item","index","section","separators","sections","rowStyle","flexDirection","paddingLeft","paddingBottom","isLast","marginBottom","itemContainerStyle","justifyContent","paddingRight","itemStyle","alignSelf","map","itemObject","i","key","renderItem","rowNumber","style","renderSectionHeader","sectionsCopy","chunked","sectionsPair","data","rows","r","keydRow","length","paddingTop","propTypes","func","isRequired","arrayOf","any","number","bool","ViewPropTypes","defaultProps","undefined"],"mappings":"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","sourcesContent":["/* eslint react/no-array-index-key: 0 */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, Dimensions, ViewPropTypes, SectionList } from 'react-native';\nimport { chunkArray } from './utils';\nimport cloneDeep from 'lodash/cloneDeep';\n\n/**\n * This class is a modification on the main super grid class. It renders a vertical scrolling grid SectionList\n */\nclass SuperGridSectionList extends Component {\n  constructor(props) {\n    super(props);\n    this.onLayout = this.onLayout.bind(this);\n    this.renderHorizontalRow = this.renderHorizontalRow.bind(this);\n    this.getDimensions = this.getDimensions.bind(this);\n    this.state = this.getDimensions();\n  }\n\n  //Resetting the dimensions if the decice has changed orientation\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.itemDimension !== this.props.itemDimension) {\n      this.setState({\n        ...this.getDimensions(this.state.totalDimension, nextProps.itemDimension),\n      });\n    }\n  }\n\n  \n  onLayout(e) {\n    const { staticDimension, onLayout } = this.props;\n    if (!staticDimension) {\n      const { width, height } = e.nativeEvent.layout || {};\n\n      this.setState({\n        ...this.getDimensions(width),\n      });\n    }\n    // run onLayout callback if provided\n    if (onLayout) {\n      onLayout(e);\n    }\n  }\n\n  getDimensions(lvDimension, itemDim) {\n    const { itemWidth, spacing, fixed, staticDimension } = this.props;\n    let itemDimension = itemDim || this.props.itemDimension;\n    if (itemWidth) {\n      itemDimension = itemWidth;\n      console.warn('React Native Super Grid - property \"itemWidth\" is depreciated. Use \"itemDimension\" instead.');\n    }\n\n    const dimension = 'width';\n    const totalDimension = lvDimension || staticDimension || Dimensions.get('window')[dimension];\n    const itemTotalDimension = itemDimension + spacing;\n    const availableDimension = totalDimension - spacing; // One spacing extra\n    const itemsPerRow = Math.floor(availableDimension / itemTotalDimension);\n    const containerDimension = availableDimension / itemsPerRow;\n\n    return {\n      totalDimension,\n      itemDimension,\n      spacing,\n      itemsPerRow,\n      containerDimension,\n      fixed,\n    };\n  }\n\n  //In this method, item is acutally representing a row of items\n  renderHorizontalRow({item, index, section, separators}) {\n    const { itemDimension, containerDimension, spacing, fixed, sections, itemsPerRow } = this.state;\n    const rowStyle = {\n      flexDirection: 'row',\n      paddingLeft: spacing,\n      paddingBottom: spacing,\n    };\n    if (item.isLast) {\n      rowStyle.marginBottom = spacing;\n    }\n    const itemContainerStyle = {\n      flexDirection: 'column',\n      justifyContent: 'center',\n      width: containerDimension,\n      paddingRight: spacing,\n    };\n    let itemStyle = {};\n    if (fixed) {\n      itemStyle = {\n        width: itemDimension,\n        alignSelf: 'center',\n      };\n    }\n\n    //Going through the row and rendering each item in that row dividually (all wrapped in a single view element)\n    return (\n      <View style={rowStyle}>\n        {(item || []).map((itemObject, i) => (\n          <View key={`${item.key}_${i}`} style={itemContainerStyle}>\n            <View style={itemStyle}>\n              {this.props.renderItem({item: itemObject, index: i + (item.rowNumber * itemsPerRow), separators: separators, section: section })}\n            </View>\n          </View>\n        ))}\n      </View>\n    );\n  }\n\n  render() {\n    const { sections, style, spacing, fixed, itemDimension, renderItem, renderSectionHeader, onLayout, ...props } = this.props;\n    const { itemsPerRow } = this.state;\n\n    //Deep copy, so that re-renders and chunkArray functions don't affect the actual items object\n    let sectionsCopy = cloneDeep(sections); \n\n    for (sectionsPair of sectionsCopy){\n\n      //Going through all the sections in sectionsCopy, and dividing their 'data' fields into smaller 'chunked' arrays to represent rows\n      const chunked = chunkArray(sectionsPair.data, itemsPerRow); \n\n      //Now adding metadata to these rows\n      const rows = chunked.map((r, i) => {\n        const keydRow = [...r];\n        keydRow.key = `row_${i}`;\n        keydRow.rowNumber = i; //Assigning a row number to each row to allow proper indexing later (row numbers local to section, not whole list)\n        keydRow.isLast = (chunked.length - 1 === i);\n        return keydRow;\n      });\n      sectionsPair.data = rows;\n    }\n\n    return (\n      <SectionList\n        sections={sectionsCopy}\n        renderSectionHeader = {renderSectionHeader}\n        renderItem={this.renderHorizontalRow}\n        style={[\n          {paddingTop: spacing },\n          style,\n        ]}\n        onLayout={this.onLayout}\n        {...props}\n      />\n    );\n  }\n}\n\nSuperGridSectionList.propTypes = {\n  renderItem: PropTypes.func.isRequired,\n  sections: PropTypes.arrayOf(PropTypes.any).isRequired,\n  itemDimension: PropTypes.number,\n  itemWidth: PropTypes.number, // for backward compatibility\n  fixed: PropTypes.bool,\n  spacing: PropTypes.number,\n  style: ViewPropTypes.style,\n  staticDimension: PropTypes.number,\n  onLayout: PropTypes.func,\n};\n\nSuperGridSectionList.defaultProps = {\n  fixed: false,\n  itemDimension: 120,\n  itemWidth: null,\n  spacing: 10,\n  style: {},\n  staticDimension: undefined,\n};\n\nexport default SuperGridSectionList;\n"]},"metadata":{},"sourceType":"module"}