{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport var firebaseConfig = {\n  apiKey: \"AIzaSyBCUEbVyhoEsQH-ZQzcwXbzuwAdcLQev3E\",\n  authDomain: \"best4sante-61097.firebaseapp.com\",\n  databaseURL: \"https://best4sante-61097.firebaseio.com\",\n  projectId: \"best4sante-61097\",\n  storageBucket: \"best4sante-61097.appspot.com\",\n  messagingSenderId: \"76849620029\",\n  appId: \"1:76849620029:web:2350de3aed95f25cbef654\",\n  measurementId: \"G-R7JTYSVW52\"\n};\nexport var uploadImageAsync = function uploadImageAsync(uri) {\n  var blob, ref, snapshot;\n  return _regeneratorRuntime.async(function uploadImageAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log(\"manombola\");\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n            var xhr = new XMLHttpRequest();\n\n            xhr.onload = function () {\n              resolve(xhr.response);\n            };\n\n            xhr.onerror = function (e) {\n              console.log(e);\n              reject(new TypeError('Network request failed'));\n            };\n\n            xhr.responseType = 'blob';\n            xhr.open('GET', uri, true);\n            xhr.send(null);\n          }));\n\n        case 3:\n          blob = _context.sent;\n          ref = firebase.storage().ref().child(\"navalona\");\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(ref.put(blob));\n\n        case 7:\n          snapshot = _context.sent;\n          blob.close();\n          console.log(\"viate\");\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(snapshot.ref.getDownloadURL());\n\n        case 12:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var saveInfo = function saveInfo(id, uri) {\n  return _regeneratorRuntime.async(function saveInfo$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(firebase.database().ref('profile').set({\n            idUser: id,\n            photoUri: uri\n          }));\n\n        case 3:\n          _context2.next = 7;\n          break;\n\n        case 5:\n          _context2.prev = 5;\n          _context2.t0 = _context2[\"catch\"](0);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};","map":{"version":3,"sources":["E:/Projets/Acadys/best4sante/SanteV2/assets/API/firebase.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","uploadImageAsync","uri","console","log","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","e","TypeError","responseType","open","send","blob","ref","firebase","storage","child","put","snapshot","close","getDownloadURL","saveInfo","id","database","set","idUser","photoUri"],"mappings":";AACA,OAAO,IAAMA,cAAc,GAAG;AAC1BC,EAAAA,MAAM,EAAE,yCADkB;AAE1BC,EAAAA,UAAU,EAAE,kCAFc;AAG1BC,EAAAA,WAAW,EAAE,yCAHa;AAI1BC,EAAAA,SAAS,EAAE,kBAJe;AAK1BC,EAAAA,aAAa,EAAE,8BALW;AAM1BC,EAAAA,iBAAiB,EAAE,aANO;AAO1BC,EAAAA,KAAK,EAAE,0CAPmB;AAQ1BC,EAAAA,aAAa,EAAE;AARW,CAAvB;AAWP,OAAO,IAAOC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7BC,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAD6B;AAAA,2CAEV,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAChD,gBAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;;AACAD,YAAAA,GAAG,CAACE,MAAJ,GAAa,YAAW;AACtBJ,cAAAA,OAAO,CAACE,GAAG,CAACG,QAAL,CAAP;AACD,aAFD;;AAGAH,YAAAA,GAAG,CAACI,OAAJ,GAAc,UAASC,CAAT,EAAY;AACxBV,cAAAA,OAAO,CAACC,GAAR,CAAYS,CAAZ;AACAN,cAAAA,MAAM,CAAC,IAAIO,SAAJ,CAAc,wBAAd,CAAD,CAAN;AACD,aAHD;;AAIAN,YAAAA,GAAG,CAACO,YAAJ,GAAmB,MAAnB;AACAP,YAAAA,GAAG,CAACQ,IAAJ,CAAS,KAAT,EAAgBd,GAAhB,EAAqB,IAArB;AACAM,YAAAA,GAAG,CAACS,IAAJ,CAAS,IAAT;AACD,WAZgB,CAFU;;AAAA;AAEvBC,UAAAA,IAFuB;AAgBrBC,UAAAA,GAhBqB,GAgBfC,QAAQ,CACjBC,OADS,GAETF,GAFS,GAGTG,KAHS,CAGH,UAHG,CAhBe;AAAA;AAAA,2CAoBJH,GAAG,CAACI,GAAJ,CAAQL,IAAR,CApBI;;AAAA;AAoBrBM,UAAAA,QApBqB;AAuB3BN,UAAAA,IAAI,CAACO,KAAL;AACFtB,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAxB6B;AAAA,2CAyBdoB,QAAQ,CAACL,GAAT,CAAaO,cAAb,EAzBc;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AA4BP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAMC,EAAN,EAAS1B,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEVkB,QAAQ,CAACS,QAAT,GAAoBV,GAApB,CAAwB,SAAxB,EAAmCW,GAAnC,CAAuC;AACzCC,YAAAA,MAAM,EAAEH,EADiC;AAEzCI,YAAAA,QAAQ,EAAE9B;AAF+B,WAAvC,CAFU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["\r\nexport const firebaseConfig = {\r\n    apiKey: \"AIzaSyBCUEbVyhoEsQH-ZQzcwXbzuwAdcLQev3E\",\r\n    authDomain: \"best4sante-61097.firebaseapp.com\",\r\n    databaseURL: \"https://best4sante-61097.firebaseio.com\",\r\n    projectId: \"best4sante-61097\",\r\n    storageBucket: \"best4sante-61097.appspot.com\",\r\n    messagingSenderId: \"76849620029\",\r\n    appId: \"1:76849620029:web:2350de3aed95f25cbef654\",\r\n    measurementId: \"G-R7JTYSVW52\"\r\n}\r\n\r\nexport const  uploadImageAsync = async(uri) =>{\r\n    console.log(\"manombola\")\r\n    const blob = await new Promise((resolve, reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.onload = function() {\r\n          resolve(xhr.response);\r\n        };\r\n        xhr.onerror = function(e) {\r\n          console.log(e);\r\n          reject(new TypeError('Network request failed'));\r\n        };\r\n        xhr.responseType = 'blob';\r\n        xhr.open('GET', uri, true);\r\n        xhr.send(null);\r\n      });\r\n    \r\n      const ref = firebase\r\n        .storage()\r\n        .ref()\r\n        .child(\"navalona\");\r\n      const snapshot = await ref.put(blob);\r\n    \r\n      // We're done with the blob, close and release it\r\n      blob.close();\r\n    console.log(\"viate\")\r\n      return await snapshot.ref.getDownloadURL();\r\n}\r\n\r\nexport const saveInfo = async(id,uri)  => {\r\n    try{\r\n        await firebase.database().ref('profile').set({ \r\n            idUser: id,\r\n            photoUri :uri\r\n         });\r\n    }catch(err) {\r\n\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}