{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\Projets\\\\Acadys\\\\best4sante\\\\SanteV2\\\\assets\\\\Screens\\\\Rappel\\\\Event.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Agenda } from 'react-native-calendars';\nimport * as firebase from 'firebase';\nimport firestore from 'firebase/firestore';\nimport { cond } from 'react-native-reanimated';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faUpload, faCalendar, faClock, faCalendarAlt, faLocationArrow } from '@fortawesome/free-solid-svg-icons';\nimport TopMenu from \"../../component/Menu/TopMenu\";\nimport { connect } from 'react-redux';\n\nvar testIDs = require(\"./testID\");\n\nvar Event = function (_Component) {\n  _inherits(Event, _Component);\n\n  var _super = _createSuper(Event);\n\n  function Event(props) {\n    var _this;\n\n    _classCallCheck(this, Event);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidMount = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(_this.fetchItems());\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      items: {},\n      dateson: {}\n    };\n    return _this;\n  }\n\n  _createClass(Event, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: Platform.OS === 'ios' ? styles.under_ios : styles.under,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, React.createElement(TopMenu, {\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      })), React.createElement(Agenda, {\n        testID: testIDs.agenda.CONTAINER,\n        items: this.state.items,\n        loadItemsForMonth: this.loadItems.bind(this),\n        selected: '2020-06-08',\n        renderItem: this.renderItem.bind(this),\n        renderEmptyDate: this.renderEmptyDate.bind(this),\n        rowHasChanged: this.rowHasChanged.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.tabBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.props.navigation.navigate(\"AddEvent\");\n        },\n        style: styles.headerBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.headerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, \"Ajouter un rappel\"))));\n    }\n  }, {\n    key: \"fetchItems\",\n    value: function fetchItems() {\n      var _this3 = this;\n\n      var ob;\n      return _regeneratorRuntime.async(function fetchItems$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              ob = {};\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(firebase.firestore().collection(\"rendezvous\").where(\"idUser\", \"==\", this.props.user.user.data.user[0].id).get().then(function (querySnapshot) {\n                querySnapshot.forEach(function (doc) {\n                  var strTimes = doc.data().dateRdv;\n\n                  if (!_this3.state.items[strTimes]) {\n                    _this3.state.items[strTimes] = [];\n\n                    _this3.state.items[strTimes].push({\n                      name: doc.data().nomRdv,\n                      heure: doc.data().heureRdv,\n                      lieu: doc.data().lieu\n                    });\n                  }\n                });\n              }));\n\n            case 3:\n              Object.keys(this.state.items).forEach(function (key) {\n                ob[key] = _this3.state.items[key];\n              });\n              this.setState({\n                items: ob\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"loadItems\",\n    value: function loadItems(day) {}\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      return React.createElement(TouchableOpacity, {\n        testID: testIDs.agenda.ITEM,\n        style: [styles.item, {\n          height: item.height\n        }],\n        onPress: function onPress() {\n          return Alert.alert(item.name);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, item.name), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, item.heure), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, item.lieu));\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return React.createElement(View, {\n        style: styles.emptyDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, \"This is empty date!\"));\n    }\n  }, {\n    key: \"rowHasChanged\",\n    value: function rowHasChanged(r1, r2) {\n      return r1.name !== r2.name;\n    }\n  }, {\n    key: \"timeToString\",\n    value: function timeToString(time) {\n      var date = new Date(time);\n      return date.toISOString().split('T')[0];\n    }\n  }]);\n\n  return Event;\n}(Component);\n\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: 'white',\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  },\n  tabBtn: {\n    marginTop: 20,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  headerBtn: {\n    padding: 20,\n    backgroundColor: \"#008AC8\"\n  },\n  headerBtnActive: {\n    backgroundColor: \"#d3d3d3\",\n    padding: 20\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    user: store.user,\n    contact: store.contact,\n    second: store.second\n  };\n};\n\nvar mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Event);","map":{"version":3,"sources":["E:/Projets/Acadys/best4sante/SanteV2/assets/Screens/Rappel/Event.js"],"names":["React","Component","Agenda","firebase","firestore","cond","FontAwesomeIcon","faUpload","faCalendar","faClock","faCalendarAlt","faLocationArrow","TopMenu","connect","testIDs","require","Event","props","componentDidMount","fetchItems","state","items","dateson","flex","Platform","OS","styles","under_ios","under","navigation","agenda","CONTAINER","loadItems","bind","renderItem","renderEmptyDate","rowHasChanged","tabBtn","navigate","headerBtn","headerText","ob","collection","where","user","data","id","get","then","querySnapshot","forEach","doc","strTimes","dateRdv","push","name","nomRdv","heure","heureRdv","lieu","Object","keys","key","setState","day","item","ITEM","height","Alert","alert","fontWeight","emptyDate","r1","r2","time","date","Date","toISOString","split","StyleSheet","create","backgroundColor","borderRadius","padding","marginRight","marginTop","paddingTop","flexDirection","justifyContent","headerBtnActive","mapStateToProps","store","contact","second","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Alert, StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport { Agenda } from 'react-native-calendars';\r\nimport * as firebase from 'firebase';\r\nimport firestore from 'firebase/firestore'\r\nimport { cond } from 'react-native-reanimated';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\r\nimport { faUpload, faCalendar, faClock, faCalendarAlt, faLocationArrow } from '@fortawesome/free-solid-svg-icons';\r\nimport TopMenu from \"../../component/Menu/TopMenu\"\r\nimport { connect } from 'react-redux';\r\n\r\nconst testIDs = require('./testID');\r\n\r\n class Event extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: {},\r\n            dateson: {},\r\n             \r\n           \r\n        };\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n       await this.fetchItems()\r\n       \r\n    }\r\n\r\n  \r\n    render() {\r\n        return (\r\n            <View style={{ flex: 1 }}>\r\n                <View style={Platform.OS === 'ios' ? styles.under_ios : styles.under}>\r\n                    <TopMenu navigation={this.props.navigation} />\r\n                </View>\r\n\r\n                <Agenda\r\n                    testID={testIDs.agenda.CONTAINER}\r\n                    items={this.state.items}\r\n                    loadItemsForMonth={this.loadItems.bind(this)}\r\n                    selected={'2020-06-08'}\r\n                    renderItem={this.renderItem.bind(this)}\r\n                    renderEmptyDate={this.renderEmptyDate.bind(this)}\r\n                    rowHasChanged={this.rowHasChanged.bind(this)}\r\n                    /* markingType={'period'}\r\n                     markedDates={{\r\n                        '2020-06-08': { textColor: '#43515c' },\r\n                        '2020-06-09': { textColor: '#43515c' },\r\n                        '2020-06-14': { startingDay: true, endingDay: true, color: 'blue' },\r\n                        '2020-06-21': { startingDay: true, color: 'blue' },\r\n                        '2020-06-22': { endingDay: true, color: 'gray' },\r\n                        '2020-06-24': { startingDay: true, color: 'gray' },\r\n                        '2020-06-25': { color: 'gray' },\r\n                        '2020-06-26': { endingDay: true, color: 'gray' }\r\n                    }}\r\n                \r\n                monthFormat={'yyyy'}\r\n                theme={{calendarBackground: 'white', agendaKnobColor: 'green'}}\r\n                 renderDay={(day, item) => (<Text>{day ? day.day: 'item'}</Text>)}\r\n                 hideExtraDays={true} */\r\n                />\r\n               \r\n\r\n                <View style={styles.tabBtn}>\r\n\r\n                    <TouchableOpacity onPress={  () => {\r\n                        this.props.navigation.navigate(\"AddEvent\")\r\n                    }} style={ styles.headerBtn}>\r\n                        <Text style={styles.headerText}>Ajouter un rappel</Text>\r\n                    </TouchableOpacity>\r\n\r\n                </View>\r\n\r\n            </View>\r\n\r\n        );\r\n    }\r\n\r\n    async fetchItems() {\r\n        const ob = {}\r\n        await firebase.firestore().collection(\"rendezvous\").where(\"idUser\", \"==\", this.props.user.user.data.user[0].id).get()\r\n            .then(querySnapshot => {\r\n                querySnapshot.forEach(doc => {\r\n\r\n                    const strTimes = doc.data().dateRdv\r\n                    if (!this.state.items[strTimes]) {\r\n\r\n                        this.state.items[strTimes] = []\r\n                        this.state.items[strTimes].push({\r\n                            name: doc.data().nomRdv,\r\n                            heure: doc.data().heureRdv,\r\n                            lieu: doc.data().lieu,\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n\r\n\r\n        Object.keys(this.state.items).forEach(key => { ob[key] = this.state.items[key] })\r\n\r\n        this.setState({ items: ob })\r\n    }\r\n\r\n    loadItems(day) {\r\n\r\n    }\r\n\r\n    renderItem(item) {\r\n        return (\r\n            <TouchableOpacity\r\n\r\n                testID={testIDs.agenda.ITEM}\r\n                style={[styles.item, { height: item.height }]}\r\n                onPress={() => Alert.alert(item.name)}\r\n            >\r\n                <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>\r\n                <Text>{item.heure}</Text>\r\n                <Text>{item.lieu}</Text>\r\n\r\n\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n\r\n    renderEmptyDate() {\r\n        return (\r\n            <View style={styles.emptyDate}>\r\n                <Text>This is empty date!</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    rowHasChanged(r1, r2) {\r\n        return r1.name !== r2.name;\r\n    }\r\n\r\n    timeToString(time) {\r\n        const date = new Date(time);\r\n        return date.toISOString().split('T')[0];\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    item: {\r\n        backgroundColor: 'white',\r\n        flex: 1,\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginRight: 10,\r\n        marginTop: 17\r\n    },\r\n    emptyDate: {\r\n        height: 15,\r\n        flex: 1,\r\n        paddingTop: 30\r\n    },\r\n    tabBtn: {\r\n        marginTop : 20,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\"\r\n    },\r\n    headerBtn : {\r\n        padding : 20,\r\n        backgroundColor : \"#008AC8\"\r\n    },\r\n    headerBtnActive : {\r\n        backgroundColor : \"#d3d3d3\",\r\n        padding : 20,\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        user: store.user,\r\n        contact: store.contact,\r\n        second: store.second\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Event);\r\n"]},"metadata":{},"sourceType":"module"}