{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\Projets\\\\Acadys\\\\best4sante\\\\SanteV2\\\\assets\\\\Screens\\\\Contacts\\\\ContactUrgence.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport TopMenu from \"../../component/Menu/TopMenu\";\nimport BottomMenu from \"../../component/Menu/BottomMenu\";\nimport { Avatar, Divider, ListItem, Input } from 'react-native-elements';\nimport { Container, Header, Item, Button } from 'native-base';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport ActionButton from 'react-native-action-button';\nimport { addContact, deleteContact } from \"../../Action\";\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faPhone, faTrash, faEye } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport Bdd from \"../../API/Bdd\";\nimport BottomSheet from 'react-native-simple-bottom-sheet';\nimport HeaderMenu from \"../../component/Menu/HeaderMenu\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\n\nvar ContactUrgence = function (_Component) {\n  _inherits(ContactUrgence, _Component);\n\n  var _super = _createSuper(ContactUrgence);\n\n  function ContactUrgence() {\n    var _this;\n\n    _classCallCheck(this, ContactUrgence);\n\n    _this = _super.call(this);\n\n    _this.renderInfo = function () {\n      return React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"flex-end\"\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }\n      }, _this.state.isModifbegin === false && React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.setState({\n            isModifbegin: true\n          });\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }\n      }, React.createElement(Avatar, {\n        size: \"medium\",\n        rounded: true,\n        overlayContainerStyle: {\n          backgroundColor: \"#008AC8\"\n        },\n        icon: {\n          name: 'pencil',\n          type: 'font-awesome'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }\n      })), _this.state.isModifbegin === true && React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this.setState({\n            isModifbegin: false\n          });\n\n          _this.saveChange();\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }\n      }, React.createElement(Avatar, {\n        size: \"medium\",\n        rounded: true,\n        overlayContainerStyle: {\n          backgroundColor: \"#008AC8\"\n        },\n        icon: {\n          name: 'save',\n          type: 'font-awesome'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }\n      }))), React.createElement(Text, {\n        style: styles.labelText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }\n      }, \"Pr\\xE9nom\"), _this.state.isModifbegin === true && React.createElement(Input, {\n        onChangeText: function onChangeText(value) {\n          return _this.setState({\n            prenom: value\n          });\n        },\n        value: _this.state.prenom,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 54\n        }\n      }), _this.state.isModifbegin === false && React.createElement(Text, {\n        style: styles.labelValue,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }\n      }, _this.state.prenom), React.createElement(Text, {\n        style: styles.labelText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }\n      }, \"Nom\"), _this.state.isModifbegin === true && React.createElement(Input, {\n        onChangeText: function onChangeText(value) {\n          return _this.setState({\n            nom: value\n          });\n        },\n        value: _this.state.nom,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 54\n        }\n      }), _this.state.isModifbegin === false && React.createElement(Text, {\n        style: styles.labelValue,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }\n      }, _this.state.nom), React.createElement(Text, {\n        style: styles.labelText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }\n      }, \"Email\"), _this.state.isModifbegin === true && React.createElement(Input, {\n        onChangeText: function onChangeText(value) {\n          return _this.setState({\n            email: value\n          });\n        },\n        value: _this.state.email,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 54\n        }\n      }), _this.state.isModifbegin === false && React.createElement(Text, {\n        style: styles.labelValue,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }\n      }, _this.state.email), React.createElement(Text, {\n        style: styles.labelText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }\n      }, \"Num\\xE9ro\"), _this.state.isModifbegin === true && React.createElement(Input, {\n        onChangeText: function onChangeText(value) {\n          return _this.setState({\n            num: value\n          });\n        },\n        value: data.numContact,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 54\n        }\n      }), _this.state.isModifbegin === false && React.createElement(Text, {\n        style: styles.labelValue,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }\n      }, _this.state.num));\n    };\n\n    _this.state = {\n      contacts: [],\n      contactsTemp: [],\n      searchText: '',\n      contactIdSelected: {},\n      isModifbegin: false,\n      id: \"\",\n      nom: \"\",\n      prenom: \"\",\n      email: \"\",\n      num: \"\"\n    };\n    _this.panelRef = React.createRef();\n    _this.showRenderInfo = false;\n    return _this;\n  }\n\n  _createClass(ContactUrgence, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.fetchContact();\n      this._subscribe = this.props.navigation.addListener('didFocus', function _callee() {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this2.fetchContact();\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    }\n  }, {\n    key: \"searchContact\",\n    value: function searchContact(search) {\n      var taille = this.state.contactsTemp.length;\n      var tab = [];\n\n      for (var i = 0; i < taille; i++) {\n        var chaine = this.state.contactsTemp[i];\n\n        if (chaine.nomContact.toString().toLowerCase().indexOf(search.toLowerCase()) > -1) {\n          console.log('find ', chaine);\n          tab.push(chaine);\n        } else {\n          console.log('not find ', chaine);\n        }\n      }\n\n      this.setState({\n        contacts: tab\n      });\n    }\n  }, {\n    key: \"fetchContact\",\n    value: function fetchContact() {\n      var _this3 = this;\n\n      var idUser = this.props.user.user.idUser;\n      axios.get(Bdd.api_url + \"/contact/list?idUser=\" + idUser).then(function (res) {\n        console.log('resultat contact ', res.data.data);\n\n        _this3.setState({\n          contacts: res.data.data\n        });\n\n        _this3.setState({\n          contactsTemp: res.data.data\n        });\n      });\n    }\n  }, {\n    key: \"callPerson\",\n    value: function callPerson(phone) {\n      var url;\n\n      if (Platform.OS === 'ios') {\n        url = 'tel://' + phone;\n      } else if (Platform.OS === 'android') {\n        url = 'tel:' + phone;\n      }\n\n      Linking.canOpenURL(url).then(function (supported) {\n        if (supported) {\n          return Linking.openURL(url).catch(function () {\n            return null;\n          });\n        }\n      });\n    }\n  }, {\n    key: \"onClickDelete\",\n    value: function onClickDelete(id) {\n      console.log('delete contact');\n      this.props.deleteContact(id);\n      this.fetchContact();\n    }\n  }, {\n    key: \"saveChange\",\n    value: function saveChange() {\n      var _this4 = this;\n\n      var data = {\n        nomContact: this.state.nom,\n        prenomContact: this.state.prenom,\n        numContact: this.state.num,\n        emailContact: this.state.email\n      };\n      var idContact = this.state.id;\n      console.log(data);\n      axios.put(Bdd.api_url + \"/contact/\" + idContact, data).then(function (_) {\n        console.log('Save contact urgence');\n\n        _this4.fetchContact();\n      }).catch(function (error) {\n        console.log('Erreur save contact urgence');\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"changeSelected\",\n    value: function changeSelected(id) {\n      var contact = this.state.contacts.filter(function (el) {\n        return el.idContact == id;\n      });\n      this.setState({\n        id: contact[0].idContact,\n        nom: contact[0].nomContact,\n        prenom: contact[0].prenomContact,\n        email: contact[0].emailContact,\n        num: contact[0].numContact\n      });\n      this.showRenderInfo = true;\n    }\n  }, {\n    key: \"toggleInfo\",\n    value: function toggleInfo(props) {\n      var show = props.isShow;\n\n      if (show) {\n        return React.createElement(this.showInfo, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 20\n          }\n        });\n      }\n    }\n  }, {\n    key: \"showInfo\",\n    value: function showInfo() {\n      var _this5 = this;\n\n      if (this.showRenderInfo) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: \"row\",\n            justifyContent: \"flex-end\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }\n        }, this.state.isModifbegin === false && React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this5.setState({\n              isModifbegin: true\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }\n        }, React.createElement(Avatar, {\n          size: \"medium\",\n          rounded: true,\n          overlayContainerStyle: {\n            backgroundColor: \"#008AC8\"\n          },\n          icon: {\n            name: 'pencil',\n            type: 'font-awesome'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }\n        })), this.state.isModifbegin === true && React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            _this5.setState({\n              isModifbegin: false\n            });\n\n            _this5.saveChange();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }\n        }, React.createElement(Avatar, {\n          size: \"medium\",\n          rounded: true,\n          overlayContainerStyle: {\n            backgroundColor: \"#008AC8\"\n          },\n          icon: {\n            name: 'save',\n            type: 'font-awesome'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }\n        }))), React.createElement(View, {\n          style: {\n            marginTop: -20\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.labelText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }\n        }, \"Pr\\xE9nom\"), this.state.isModifbegin === true && React.createElement(Input, {\n          onChangeText: function onChangeText(value) {\n            return _this5.setState({\n              prenom: value\n            });\n          },\n          value: this.state.prenom,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 50\n          }\n        }), this.state.isModifbegin === false && React.createElement(Text, {\n          style: styles.labelValue,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }\n        }, this.state.prenom), React.createElement(Text, {\n          style: styles.labelText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }\n        }, \"Nom\"), this.state.isModifbegin === true && React.createElement(Input, {\n          onChangeText: function onChangeText(value) {\n            return _this5.setState({\n              nom: value\n            });\n          },\n          value: this.state.nom,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 50\n          }\n        }), this.state.isModifbegin === false && React.createElement(Text, {\n          style: styles.labelValue,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }\n        }, this.state.nom), React.createElement(Text, {\n          style: styles.labelText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }\n        }, \"Email\"), this.state.isModifbegin === true && React.createElement(Input, {\n          onChangeText: function onChangeText(value) {\n            return _this5.setState({\n              email: value\n            });\n          },\n          value: this.state.email,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 50\n          }\n        }), this.state.isModifbegin === false && React.createElement(Text, {\n          style: styles.labelValue,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }\n        }, this.state.email), React.createElement(Text, {\n          style: styles.labelText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }\n        }, \"Num\\xE9ro\"), this.state.isModifbegin === true && React.createElement(Input, {\n          keyboardType: \"numeric\",\n          onChangeText: function onChangeText(value) {\n            return _this5.setState({\n              num: value\n            });\n          },\n          value: this.state.num,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 50\n          }\n        }), this.state.isModifbegin === false && React.createElement(Text, {\n          style: styles.labelValue,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 17\n          }\n        }, this.state.num)));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var list = [{\n        title: 'Appointments',\n        icon: 'av-timer'\n      }, {\n        title: 'Trips',\n        icon: 'flight-takeoff'\n      }];\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: Platform.OS === 'ios' ? styles.under_ios : styles.under,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 17\n        }\n      }, React.createElement(HeaderMenu, {\n        navigation: this.props.navigation,\n        urgence: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }\n      }, React.createElement(Input, {\n        placeholder: \"  Rechercher\",\n        inputContainerStyle: {\n          paddingLeft: 5,\n          marginTop: 10,\n          marginBottom: 20\n        },\n        leftIcon: React.createElement(Icon, {\n          name: \"search\",\n          size: 22,\n          color: \"#696969\",\n          containerStyle: {\n            marginRight: 50\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 21\n          }\n        }),\n        onChangeText: function onChangeText(text) {\n          return _this6.searchContact(text);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }\n      })), React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 17\n        }\n      }, this.state.contacts.map(function (contact, i) {\n        var initial = contact.nomContact[0];\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row'\n          },\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 33\n          }\n        }, React.createElement(ListItem, {\n          style: {\n            flex: 7\n          },\n          containerStyle: {\n            margin: 0\n          },\n          key: i,\n          title: contact.nomContact,\n          leftAvatar: {\n            title: initial.toString().toUpperCase()\n          },\n          bottomDivider: true,\n          onPress: function onPress() {\n            _this6.panelRef.current.togglePanel();\n\n            _this6.changeSelected(contact.idContact);\n          },\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 33\n          }\n        }), React.createElement(View, {\n          style: {\n            flex: 1,\n            backgroundColor: 'white'\n          },\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 29\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            paddingTop: 30,\n            color: 'red'\n          },\n          onPress: function onPress() {\n            return _this6.callPerson(contact.numContact);\n          },\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 29\n          }\n        }, React.createElement(FontAwesomeIcon, {\n          icon: faPhone,\n          color: \"#008AC8\",\n          size: 19,\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 29\n          }\n        }))), React.createElement(View, {\n          style: {\n            flex: 1,\n            backgroundColor: 'white'\n          },\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 29\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: {\n            paddingTop: 30,\n            color: '#e6e6e6'\n          },\n          onPress: function onPress() {\n            return _this6.onClickDelete(contact.idContact);\n          },\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 29\n          }\n        }, React.createElement(FontAwesomeIcon, {\n          icon: faTrash,\n          style: {\n            color: '#2b2b2b'\n          },\n          size: 19,\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 29\n          }\n        }))));\n      })), React.createElement(BottomSheet, {\n        isOpen: true,\n        sliderMinHeight: 0,\n        ref: function ref(_ref) {\n          return _this6.panelRef.current = _ref;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 17\n        }\n      }, this.showInfo()));\n    }\n  }]);\n\n  return ContactUrgence;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF'\n  },\n  contactHeader: {\n    flexDirection: \"row\",\n    padding: 15,\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  },\n  contactHeaderText: {\n    fontWeight: \"bold\",\n    fontSize: 20\n  },\n  labelText: {\n    fontWeight: \"bold\",\n    fontSize: 19\n  },\n  labelValue: {\n    color: \"gray\",\n    fontSize: 18,\n    borderBottomColor: '#000',\n    borderBottomWidth: 2,\n    marginBottom: 5,\n    paddingLeft: 10,\n    paddingBottom: 5,\n    paddingTop: 2\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    user: store.user,\n    contact: store.contact\n  };\n};\n\nvar mapDispatchToProps = {\n  deleteContact: deleteContact\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactUrgence);","map":{"version":3,"sources":["E:/Projets/Acadys/best4sante/SanteV2/assets/Screens/Contacts/ContactUrgence.js"],"names":["React","Component","TopMenu","BottomMenu","Avatar","Divider","ListItem","Input","Container","Header","Item","Button","TouchableOpacity","ActionButton","addContact","deleteContact","connect","FontAwesomeIcon","faPhone","faTrash","faEye","axios","Bdd","BottomSheet","HeaderMenu","Icon","ContactUrgence","renderInfo","flexDirection","justifyContent","state","isModifbegin","setState","backgroundColor","name","type","saveChange","styles","labelText","value","prenom","labelValue","nom","email","num","data","numContact","contacts","contactsTemp","searchText","contactIdSelected","id","panelRef","createRef","showRenderInfo","fetchContact","_subscribe","props","navigation","addListener","search","taille","length","tab","i","chaine","nomContact","toString","toLowerCase","indexOf","console","log","push","idUser","user","get","api_url","then","res","phone","url","Platform","OS","Linking","canOpenURL","supported","openURL","catch","prenomContact","emailContact","idContact","put","_","error","contact","filter","el","show","isShow","marginTop","list","title","icon","container","under_ios","under","paddingLeft","marginBottom","marginRight","text","searchContact","map","initial","flex","margin","toUpperCase","current","togglePanel","changeSelected","paddingTop","color","callPerson","onClickDelete","ref","showInfo","StyleSheet","create","contactHeader","padding","alignItems","contactHeaderText","fontWeight","fontSize","borderBottomColor","borderBottomWidth","paddingBottom","mapStateToProps","store","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Text, View, StyleSheet, ScrollView, Linking } from 'react-native'\r\nimport TopMenu from \"../../component/Menu/TopMenu\"\r\nimport BottomMenu from \"../../component/Menu/BottomMenu\"\r\nimport { Avatar, Divider, ListItem, Input } from 'react-native-elements';\r\nimport { Container, Header, Item, Button } from 'native-base';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport ActionButton from 'react-native-action-button';\r\nimport { addContact, deleteContact } from \"../../Action\"\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\r\nimport { faPhone, faTrash, faEye } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport Bdd from \"../../API/Bdd\"\r\nimport BottomSheet from 'react-native-simple-bottom-sheet';\r\nimport HeaderMenu from \"../../component/Menu/HeaderMenu\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\n\r\nclass ContactUrgence extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            contacts: [],\r\n            contactsTemp: [],\r\n            searchText: '',\r\n            contactIdSelected: {},\r\n            isModifbegin: false,\r\n            id: \"\",\r\n            nom: \"\",\r\n            prenom: \"\",\r\n            email: \"\",\r\n            num: \"\"\r\n        }\r\n        this.panelRef = React.createRef()\r\n        this.showRenderInfo = false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchContact()\r\n\r\n        this._subscribe = this.props.navigation.addListener('didFocus', async () => {\r\n            this.fetchContact()\r\n       });\r\n    }\r\n\r\n    searchContact(search) {\r\n        const taille = this.state.contactsTemp.length;\r\n        var tab = [];\r\n        for(let i = 0; i < taille; i++){\r\n            var chaine = this.state.contactsTemp[i];\r\n            if (chaine.nomContact.toString().toLowerCase().indexOf(search.toLowerCase()) > -1)\r\n            { \r\n                console.log('find ', chaine);\r\n                tab.push(chaine);\r\n            } else {\r\n                console.log('not find ', chaine);\r\n            }\r\n        }\r\n        this.setState({\r\n            contacts: tab\r\n        });\r\n    }\r\n\r\n    fetchContact() {\r\n        const idUser = this.props.user.user.idUser\r\n        axios.get(`${Bdd.api_url}/contact/list?idUser=${idUser}`)\r\n            .then(res => {\r\n                console.log('resultat contact ', res.data.data)\r\n                this.setState({ contacts: res.data.data })\r\n                this.setState({ contactsTemp: res.data.data })\r\n            })\r\n    }\r\n\r\n    callPerson(phone) {\r\n        let url;\r\n        if (Platform.OS === 'ios') {\r\n            url = 'tel://' + phone\r\n        }\r\n        else if (Platform.OS === 'android') {\r\n            url = 'tel:' + phone\r\n\r\n        }\r\n\r\n        Linking.canOpenURL(url)\r\n            .then((supported) => {\r\n                if (supported) {\r\n                    return Linking.openURL(url)\r\n                        .catch(() => null);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    onClickDelete(id) {\r\n        console.log('delete contact')\r\n        this.props.deleteContact(id);\r\n        this.fetchContact()\r\n    }\r\n\r\n    saveChange() {\r\n        let data = {\r\n            nomContact: this.state.nom,\r\n            prenomContact: this.state.prenom,\r\n            numContact: this.state.num,\r\n            emailContact: this.state.email\r\n        }\r\n        let idContact = this.state.id\r\n        console.log(data)\r\n        axios.put(`${Bdd.api_url}/contact/${idContact}`, data)\r\n            .then(_ => {\r\n                console.log('Save contact urgence')\r\n                this.fetchContact()\r\n            }).catch(\r\n                error => {\r\n                    console.log('Erreur save contact urgence')\r\n                    console.log(error)\r\n                }\r\n            )\r\n    }\r\n\r\n    changeSelected(id) {\r\n\r\n        let contact = this.state.contacts.filter(el => {\r\n            return el.idContact == id\r\n        })\r\n\r\n        this.setState({\r\n            id: contact[0].idContact,\r\n            nom: contact[0].nomContact,\r\n            prenom: contact[0].prenomContact,\r\n            email: contact[0].emailContact,\r\n            num: contact[0].numContact\r\n        })\r\n        this.showRenderInfo = true\r\n    }\r\n\r\n    toggleInfo(props) {\r\n        const show = props.isShow\r\n        if(show) {\r\n            return <this.showInfo/>\r\n        }\r\n    }\r\n\r\n    showInfo() {\r\n        if (this.showRenderInfo) {\r\n        return (<View>\r\n\r\n            <View style={{ flexDirection: \"row\", justifyContent: \"flex-end\"}}>\r\n                {this.state.isModifbegin === false &&\r\n                    <TouchableOpacity onPress={() => this.setState({ isModifbegin: true })}>\r\n                        <Avatar size=\"medium\" rounded overlayContainerStyle={{ backgroundColor: \"#008AC8\" }} icon={{ name: 'pencil', type: 'font-awesome' }} />\r\n\r\n                    </TouchableOpacity>\r\n                }\r\n                {this.state.isModifbegin === true &&\r\n                    <TouchableOpacity onPress={() => {\r\n                        this.setState({ isModifbegin: false })\r\n                        this.saveChange()\r\n                    }}>\r\n                        <Avatar size=\"medium\" rounded overlayContainerStyle={{ backgroundColor: \"#008AC8\" }} icon={{ name: 'save', type: 'font-awesome' }} />\r\n\r\n                    </TouchableOpacity>\r\n                }\r\n            </View>\r\n          \r\n            <View style={{marginTop: -20}}>\r\n            <Text style={styles.labelText}>Prénom</Text>\r\n            {this.state.isModifbegin === true && <Input\r\n                onChangeText={(value) => this.setState({ prenom: value })}\r\n                value={this.state.prenom}\r\n            />\r\n            }\r\n            {this.state.isModifbegin === false &&\r\n                <Text style={styles.labelValue}>{this.state.prenom}</Text>\r\n            }\r\n\r\n            <Text style={styles.labelText}>Nom</Text>\r\n            {this.state.isModifbegin === true && <Input\r\n                onChangeText={(value) => this.setState({ nom: value })}\r\n                value={this.state.nom}\r\n            />\r\n            }\r\n            {this.state.isModifbegin === false &&\r\n                <Text style={styles.labelValue}>{this.state.nom}</Text>\r\n            }\r\n\r\n            <Text style={styles.labelText}>Email</Text>\r\n            {this.state.isModifbegin === true && <Input\r\n                onChangeText={(value) => this.setState({ email: value })}\r\n                value={this.state.email}\r\n            />\r\n            }\r\n            {this.state.isModifbegin === false &&\r\n                <Text style={styles.labelValue}>{this.state.email}</Text>\r\n            }\r\n\r\n            <Text style={styles.labelText}>Numéro</Text>\r\n            {this.state.isModifbegin === true && <Input keyboardType=\"numeric\"\r\n                onChangeText={(value) => this.setState({ num: value })}\r\n                value={this.state.num}\r\n            />\r\n            }\r\n            {this.state.isModifbegin === false &&\r\n                <Text style={styles.labelValue}>{this.state.num}</Text>\r\n            }\r\n            </View>\r\n        </View>)  \r\n    }\r\n    }\r\n\r\n\r\n    renderInfo = () => {\r\n        return (<View>\r\n\r\n            <View style={{ flexDirection: \"row\", justifyContent: \"flex-end\" }}>\r\n                {this.state.isModifbegin === false &&\r\n                    <TouchableOpacity onPress={() => this.setState({ isModifbegin: true })}>\r\n                        <Avatar size=\"medium\" rounded overlayContainerStyle={{ backgroundColor: \"#008AC8\" }} icon={{ name: 'pencil', type: 'font-awesome' }} />\r\n\r\n                    </TouchableOpacity>\r\n                }\r\n                {this.state.isModifbegin === true &&\r\n                    <TouchableOpacity onPress={() => {\r\n                        this.setState({ isModifbegin: false })\r\n                        this.saveChange()\r\n                    }}>\r\n                        <Avatar size=\"medium\" rounded overlayContainerStyle={{ backgroundColor: \"#008AC8\" }} icon={{ name: 'save', type: 'font-awesome' }} />\r\n\r\n                    </TouchableOpacity>\r\n                }\r\n            </View>\r\n          \r\n                <Text style={styles.labelText}>Prénom</Text>\r\n                {this.state.isModifbegin === true && <Input\r\n                    onChangeText={(value) => this.setState({ prenom: value })}\r\n                    value={this.state.prenom}\r\n                />\r\n                }\r\n                {this.state.isModifbegin === false &&\r\n                    <Text style={styles.labelValue}>{this.state.prenom}</Text>\r\n                }\r\n\r\n                <Text style={styles.labelText}>Nom</Text>\r\n                {this.state.isModifbegin === true && <Input\r\n                    onChangeText={(value) => this.setState({ nom: value })}\r\n                    value={this.state.nom}\r\n                />\r\n                }\r\n                {this.state.isModifbegin === false &&\r\n                    <Text style={styles.labelValue}>{this.state.nom}</Text>\r\n                }\r\n\r\n                <Text style={styles.labelText}>Email</Text>\r\n                {this.state.isModifbegin === true && <Input\r\n                    onChangeText={(value) => this.setState({ email: value })}\r\n                    value={this.state.email}\r\n                />\r\n                }\r\n                {this.state.isModifbegin === false &&\r\n                    <Text style={styles.labelValue}>{this.state.email}</Text>\r\n                }\r\n\r\n                <Text style={styles.labelText}>Numéro</Text>\r\n                {this.state.isModifbegin === true && <Input\r\n                    onChangeText={(value) => this.setState({ num: value })}\r\n                    value={data.numContact}\r\n                />\r\n                }\r\n                {this.state.isModifbegin === false &&\r\n                    <Text style={styles.labelValue}>{this.state.num}</Text>\r\n                }\r\n\r\n         \r\n\r\n\r\n\r\n        </View>)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n        const list = [\r\n            {\r\n                title: 'Appointments',\r\n                icon: 'av-timer'\r\n            },\r\n            {\r\n                title: 'Trips',\r\n                icon: 'flight-takeoff'\r\n            },\r\n\r\n        ]\r\n        return (\r\n            <View style={styles.container}>\r\n\r\n                <View style={Platform.OS === 'ios' ? styles.under_ios : styles.under}>\r\n                <HeaderMenu navigation={this.props.navigation} urgence={1}/>\r\n                </View>\r\n\r\n                {/**\r\n                                <Header searchBar rounded style={{backgroundColor: '#e6e6e6', marginTop: 5, marginBottom: 5}}>\r\n                  <Item>\r\n                    <Icon name=\"ios-search\" />\r\n                    <Input placeholder=\"Rechercher\" onChangeText={(text) => this.searchContact(text)}/>\r\n                  </Item>\r\n                  <Button transparent>\r\n                    <Text>Rechercher</Text>\r\n                  </Button>\r\n                </Header>\r\n                */}\r\n\r\n                <View>\r\n                <Input placeholder=\"  Rechercher\"\r\n                inputContainerStyle={{paddingLeft: 5, marginTop: 10, marginBottom: 20}}\r\n                leftIcon={\r\n                    <Icon\r\n                      name='search'\r\n                      size={22}\r\n                      color='#696969'\r\n                      containerStyle={{marginRight: 50}}\r\n                    />\r\n                  }\r\n                onChangeText={(text) => this.searchContact(text)}\r\n                />\r\n            </View>\r\n\r\n                <ScrollView>\r\n                    {\r\n                        this.state.contacts.map((contact, i) => {\r\n                            const initial = contact.nomContact[0]\r\n                            return (\r\n                                <View style={{flex: 1, flexDirection: 'row'}}>\r\n                                <ListItem\r\n                                style={{flex: 7}}\r\n                                containerStyle={{ margin: 0}}\r\n                                key={i}\r\n                                title={contact.nomContact}\r\n                                leftAvatar={{\r\n                                    title: initial.toString().toUpperCase()\r\n                                }}\r\n                                bottomDivider\r\n                                onPress={() => {\r\n                                    this.panelRef.current.togglePanel()\r\n                                    this.changeSelected(contact.idContact)\r\n                                }}\r\n                            />\r\n                            <View style={{flex: 1, backgroundColor: 'white'}}>\r\n                            <TouchableOpacity style={{ paddingTop: 30, color: 'red' }} onPress={() => this.callPerson(contact.numContact)}>\r\n                            <FontAwesomeIcon icon={faPhone} color=\"#008AC8\" size={19}/>\r\n                            </TouchableOpacity>\r\n                            </View>\r\n\r\n                            <View style={{flex: 1, backgroundColor: 'white'}}>\r\n                            <TouchableOpacity style={{ paddingTop: 30, color: '#e6e6e6' }} onPress={() => this.onClickDelete(contact.idContact)}>\r\n                            <FontAwesomeIcon icon={faTrash} style={{color: '#2b2b2b' }} size={19}/>\r\n                            </TouchableOpacity>\r\n                            </View>\r\n\r\n                            </View>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </ScrollView>\r\n\r\n                <BottomSheet isOpen={true} sliderMinHeight={0} ref={ref => this.panelRef.current = ref}>\r\n                    {this.showInfo()}\r\n                </BottomSheet>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#FFFFFF'\r\n    },\r\n    contactHeader: {\r\n        flexDirection: \"row\",\r\n        padding: 15,\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\"\r\n    },\r\n    contactHeaderText: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 20\r\n    },\r\n\r\n    labelText: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 19\r\n    },\r\n    labelValue: {\r\n        color: \"gray\",\r\n        fontSize: 18,\r\n        borderBottomColor: '#000',\r\n        borderBottomWidth: 2,\r\n        marginBottom: 5,\r\n        paddingLeft: 10,\r\n        paddingBottom: 5,\r\n        paddingTop: 2\r\n    },\r\n\r\n\r\n\r\n})\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        user: store.user,\r\n        contact: store.contact,\r\n        /* favorite: store.favorite,\r\n        second: store.second */\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    deleteContact\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactUrgence)"]},"metadata":{},"sourceType":"module"}