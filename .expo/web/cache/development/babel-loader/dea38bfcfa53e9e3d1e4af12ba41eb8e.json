{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\Projets\\\\Acadys\\\\best4sante\\\\SanteV2\\\\assets\\\\Screens\\\\Contacts\\\\NewContact.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TopMenu from \"../../component/Menu/TopMenu\";\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { connect } from 'react-redux';\nimport { addContact, setContactInfo } from \"../../Action\";\nimport { Card, Icon, Input, Avatar } from 'react-native-elements';\nimport { TextInput } from 'react-native-paper';\nimport HeaderNewContact from \"../../component/Menu/HeaderNewContact\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scrollview';\nimport { Container, Header, Content, Form, Item, Label } from 'native-base';\n\nvar NewContact = function (_Component) {\n  _inherits(NewContact, _Component);\n\n  var _super = _createSuper(NewContact);\n\n  function NewContact() {\n    var _this;\n\n    _classCallCheck(this, NewContact);\n\n    _this = _super.call(this);\n    _this.state = {\n      error: null\n    };\n    _this.firstName = \"\";\n    _this.lastName = \"\";\n    _this.email = \"\";\n    _this.phone = \"\";\n    _this.onClickaddContact = _this.onClickaddContact.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NewContact, [{\n    key: \"onChangeInput\",\n    value: function onChangeInput(text, type) {\n      this[type] = text;\n    }\n  }, {\n    key: \"onClickaddContact\",\n    value: function onClickaddContact() {\n      var contact = {\n        nomContact: this.firstName,\n        prenomContact: this.lastName,\n        emailContact: this.email,\n        numContact: this.phone,\n        idUser: this.props.user.user.idUser\n      };\n      console.log(contact);\n\n      if (contact.nomContact != '' && contact.prenomContact != '' && contact.numContact != '') {\n        this.props.addContact(contact);\n        this.props.setContactInfo(contact.idUser);\n        this.gotToProfil();\n      } else {\n        this.setState({\n          error: 'Veuillez completer les champs'\n        });\n        this.props.navigation.navigate(\"NewContact\");\n      }\n    }\n  }, {\n    key: \"gotToProfil\",\n    value: function gotToProfil() {\n      this.props.navigation.push(\"ContactUrgence\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: Platform.OS === 'ios' ? styles.under_ios : styles.under,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, React.createElement(HeaderNewContact, {\n        navigation: this.props.navigation,\n        addContact: 1,\n        saveContact: this.onClickaddContact,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      })), React.createElement(KeyboardAwareScrollView, {\n        style: {\n          flex: 1\n        },\n        getTextInputRefs: function getTextInputRefs() {\n          return [_this2._textInputRef];\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: \"center\",\n          marginLeft: 20,\n          marginRight: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.contain_avatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, React.createElement(Avatar, {\n        rounded: true,\n        icon: {\n          name: 'phone'\n        },\n        size: 90,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: styles.contain_list,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, React.createElement(Item, {\n        stackedLabel: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, React.createElement(Label, {\n        style: styles.my_label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, \"Pr\\xE9nom\"), React.createElement(Input, {\n        inputStyle: {\n          'color': 'black'\n        },\n        onChangeText: function onChangeText(text) {\n          return _this2.firstName = text;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      })), React.createElement(Item, {\n        stackedLabel: true,\n        last: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, React.createElement(Label, {\n        style: styles.my_label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, \"Nom\"), React.createElement(Input, {\n        inputStyle: {\n          'color': 'black'\n        },\n        onChangeText: function onChangeText(text) {\n          return _this2.lastName = text;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      })), React.createElement(Item, {\n        stackedLabel: true,\n        last: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, React.createElement(Label, {\n        style: styles.my_label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, \"Adresse email\"), React.createElement(Input, {\n        inputStyle: {\n          'color': 'black'\n        },\n        onChangeText: function onChangeText(text) {\n          return _this2.email = text;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      })), React.createElement(Item, {\n        stackedLabel: true,\n        last: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, React.createElement(Label, {\n        style: styles.my_label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, \"T\\xE9l\\xE9phone\"), React.createElement(Input, {\n        inputStyle: {\n          'color': 'black'\n        },\n        keyboardType: \"numeric\",\n        onChangeText: function onChangeText(text) {\n          return _this2.phone = text;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      })))), this.state.error !== null && React.createElement(Text, {\n        style: styles.text_error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 41\n        }\n      }, this.state.error))));\n    }\n  }]);\n\n  return NewContact;\n}(Component);\n\nvar styles = StyleSheet.create({\n  contain_avatar: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40,\n    marginBottom: 10\n  },\n  text_error: {\n    color: 'red',\n    fontSize: 16,\n    marginTop: -50,\n    textAlign: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  container2: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignItems: 'center',\n    paddingTop: hp('8%'),\n    zIndex: 2\n  },\n  header: {\n    position: 'relative',\n    top: hp(\"20%\"),\n    zIndex: 4,\n    textAlign: 'center'\n  },\n  center: {\n    textAlign: 'center',\n    color: \"white\",\n    fontSize: 23,\n    marginTop: hp('1%'),\n    marginBottom: hp('1%'),\n    fontWeight: 'bold'\n  },\n  red: {\n    color: 'red'\n  },\n  body: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textinput: {\n    marginLeft: 5,\n    marginRight: 5,\n    height: 50,\n    width: wp(\"70%\"),\n    paddingLeft: 15,\n    backgroundColor: 'white',\n    borderColor: \"#000\",\n    borderRadius: 3,\n    marginBottom: hp('2%')\n  },\n  footer: {\n    position: 'relative',\n    bottom: hp(\"10%\"),\n    zIndex: 4,\n    textAlign: 'center',\n    textDecorationLine: 'underline',\n    paddingTop: 15,\n    paddingBottom: 15,\n    paddingLeft: 15,\n    paddingRight: 15,\n    color: \"white\"\n  },\n  title2: {\n    color: \"white\",\n    marginBottom: hp('1%'),\n    marginTop: hp('1%'),\n    textAlign: \"center\"\n  },\n  buttonStyle: {\n    backgroundColor: \"#008ac8\",\n    marginTop: hp(\"2%\"),\n    marginBottom: hp(\"2.5%\"),\n    paddingTop: hp('3%'),\n    paddingBottom: hp('3%'),\n    paddingLeft: wp(\"2%\"),\n    paddingRight: wp(\"2%\")\n  },\n  buttonText: {\n    color: 'white',\n    textAlign: \"center\",\n    fontSize: 16\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    user: store.user,\n    contact: store.contact\n  };\n};\n\nvar mapDispatchToProps = {\n  addContact: addContact,\n  setContactInfo: setContactInfo\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewContact);","map":{"version":3,"sources":["E:/Projets/Acadys/best4sante/SanteV2/assets/Screens/Contacts/NewContact.js"],"names":["React","Component","TopMenu","widthPercentageToDP","wp","heightPercentageToDP","hp","connect","addContact","setContactInfo","Card","Icon","Input","Avatar","TextInput","HeaderNewContact","KeyboardAwareScrollView","Container","Header","Content","Form","Item","Label","NewContact","state","error","firstName","lastName","email","phone","onClickaddContact","bind","text","type","contact","nomContact","prenomContact","emailContact","numContact","idUser","props","user","console","log","gotToProfil","setState","navigation","navigate","push","styles","container","Platform","OS","under_ios","under","flex","_textInputRef","justifyContent","marginLeft","marginRight","contain_avatar","name","contain_list","my_label","text_error","StyleSheet","create","flexDirection","alignItems","marginTop","marginBottom","color","fontSize","textAlign","backgroundColor","container2","paddingTop","zIndex","header","position","top","center","fontWeight","red","body","textinput","height","width","paddingLeft","borderColor","borderRadius","footer","bottom","textDecorationLine","paddingBottom","paddingRight","title2","buttonStyle","buttonText","mapStateToProps","store","mapDispatchToProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAGA,OAAOC,OAAP;AACA,SACEC,mBAAmB,IAAIC,EADzB,EAEEC,oBAAoB,IAAIC,EAF1B,QAGO,gCAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,cAArB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,MAA5B,QAA0C,uBAA1C;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,gBAAP;AACA,SAAQC,uBAAR,QAAsC,wCAAtC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,OAA5B,EAAqCC,IAArC,EAA2CC,IAA3C,EAAiDC,KAAjD,QAA8D,aAA9D;;IACMC,U;;;;;AAEJ,wBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAIA,UAAKC,SAAL,GAAiB,EAAjB;AACA,UAAKC,QAAL,GAAgB,EAAhB;AACA,UAAKC,KAAL,GAAa,EAAb;AACA,UAAKC,KAAL,GAAa,EAAb;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,+BAAzB;AAVY;AAWb;;;;kCAGaC,I,EAAMC,I,EAAM;AACxB,WAAKA,IAAL,IAAaD,IAAb;AACD;;;wCAEmB;AAClB,UAAIE,OAAO,GAAG;AACZC,QAAAA,UAAU,EAAE,KAAKT,SADL;AAEZU,QAAAA,aAAa,EAAE,KAAKT,QAFR;AAGZU,QAAAA,YAAY,EAAE,KAAKT,KAHP;AAIZU,QAAAA,UAAU,EAAE,KAAKT,KAJL;AAKZU,QAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBA,IAAhB,CAAqBF;AALjB,OAAd;AAQAG,MAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;;AACA,UAAIA,OAAO,CAACC,UAAR,IAAsB,EAAtB,IAA4BD,OAAO,CAACE,aAAR,IAAyB,EAArD,IAA2DF,OAAO,CAACI,UAAR,IAAsB,EAArF,EAAyF;AACvF,aAAKE,KAAL,CAAWhC,UAAX,CAAsB0B,OAAtB;AACA,aAAKM,KAAL,CAAW/B,cAAX,CAA0ByB,OAAO,CAACK,MAAlC;AACA,aAAKK,WAAL;AACD,OAJD,MAIO;AAEP,aAAKC,QAAL,CAAc;AACZpB,UAAAA,KAAK,EAAE;AADK,SAAd;AAGA,aAAKe,KAAL,CAAWM,UAAX,CAAsBC,QAAtB,CAA+B,YAA/B;AAEC;AACF;;;kCAGa;AACZ,WAAKP,KAAL,CAAWM,UAAX,CAAsBE,IAAtB,CAA2B,gBAA3B;AACD;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwBH,MAAM,CAACI,SAA/B,GAA2CJ,MAAM,CAACK,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,gBAAD;AAAkB,QAAA,UAAU,EAAE,KAAKd,KAAL,CAAWM,UAAzC;AAAqD,QAAA,UAAU,EAAE,CAAjE;AAAoE,QAAA,WAAW,EAAE,KAAKhB,iBAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADF,EAKE,oBAAC,uBAAD;AAAyB,QAAA,KAAK,EAAE;AAAEyB,UAAAA,IAAI,EAAE;AAAR,SAAhC;AAA6C,QAAA,gBAAgB,EAAE,4BAAM;AAAE,iBAAO,CAAC,MAAI,CAACC,aAAN,CAAP;AAA6B,SAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACD,UAAAA,IAAI,EAAG,CAAR;AAAUE,UAAAA,cAAc,EAAG,QAA3B;AAAoCC,UAAAA,UAAU,EAAG,EAAjD;AAAqDC,UAAAA,WAAW,EAAG;AAAnE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEV,MAAM,CAACW,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,IAAI,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAtB;AAAyC,QAAA,IAAI,EAAE,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADF,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEZ,MAAM,CAACa,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,YAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEb,MAAM,CAACc,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,KAAD;AAAO,QAAA,UAAU,EAAE;AAAC,mBAAS;AAAV,SAAnB;AAAuC,QAAA,YAAY,EAAE,sBAAC/B,IAAD;AAAA,iBAAU,MAAI,CAACN,SAAL,GAAiBM,IAA3B;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADA,EAOA,oBAAC,IAAD;AAAM,QAAA,YAAY,MAAlB;AAAmB,QAAA,IAAI,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEiB,MAAM,CAACc,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAEA,oBAAC,KAAD;AAAO,QAAA,UAAU,EAAE;AAAC,mBAAS;AAAV,SAAnB;AAAuC,QAAA,YAAY,EAAE,sBAAC/B,IAAD;AAAA,iBAAU,MAAI,CAACL,QAAL,GAAgBK,IAA1B;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CAPA,EAYA,oBAAC,IAAD;AAAM,QAAA,YAAY,MAAlB;AAAmB,QAAA,IAAI,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEiB,MAAM,CAACc,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,EAEA,oBAAC,KAAD;AAAO,QAAA,UAAU,EAAE;AAAC,mBAAS;AAAV,SAAnB;AAAuC,QAAA,YAAY,EAAE,sBAAC/B,IAAD;AAAA,iBAAU,MAAI,CAACJ,KAAL,GAAaI,IAAvB;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CAZA,EAiBA,oBAAC,IAAD;AAAM,QAAA,YAAY,MAAlB;AAAmB,QAAA,IAAI,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEiB,MAAM,CAACc,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADA,EAEA,oBAAC,KAAD;AAAO,QAAA,UAAU,EAAE;AAAC,mBAAS;AAAV,SAAnB;AACA,QAAA,YAAY,EAAE,SADd;AAEA,QAAA,YAAY,EAAE,sBAAC/B,IAAD;AAAA,iBAAU,MAAI,CAACH,KAAL,GAAaG,IAAvB;AAAA,SAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CAjBA,CADA,CALF,EAqFG,KAAKR,KAAL,CAAWC,KAAX,KAAqB,IAArB,IAA6B,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEwB,MAAM,CAACe,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKxC,KAAL,CAAWC,KAA5C,CArFhC,CADA,CALF,CADF;AAmGD;;;;EArJsBxB,S;;AA0JzB,IAAMgD,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,cAAc,EAAE;AACdL,IAAAA,IAAI,EAAE,CADQ;AAEdY,IAAAA,aAAa,EAAE,KAFD;AAGdV,IAAAA,cAAc,EAAE,QAHF;AAIdW,IAAAA,UAAU,EAAE,QAJE;AAKdC,IAAAA,SAAS,EAAE,EALG;AAMdC,IAAAA,YAAY,EAAE;AANA,GADe;AAS/BN,EAAAA,UAAU,EAAE;AACVO,IAAAA,KAAK,EAAE,KADG;AAEVC,IAAAA,QAAQ,EAAE,EAFA;AAGVH,IAAAA,SAAS,EAAE,CAAC,EAHF;AAIVI,IAAAA,SAAS,EAAE,QAJD;AAKVL,IAAAA,UAAU,EAAE;AALF,GATmB;AAgB/BlB,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETmB,IAAAA,eAAe,EAAE;AAFR,GAhBoB;AAsB/BC,EAAAA,UAAU,EAAE;AACVpB,IAAAA,IAAI,EAAE,CADI;AAEVE,IAAAA,cAAc,EAAE,QAFN;AAGVW,IAAAA,UAAU,EAAE,QAHF;AAKVA,IAAAA,UAAU,EAAE,QALF;AAMVQ,IAAAA,UAAU,EAAEtE,EAAE,CAAC,IAAD,CANJ;AAQVuE,IAAAA,MAAM,EAAE;AARE,GAtBmB;AAgC/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE,UADJ;AAENC,IAAAA,GAAG,EAAE1E,EAAE,CAAC,KAAD,CAFD;AAGNuE,IAAAA,MAAM,EAAE,CAHF;AAINJ,IAAAA,SAAS,EAAE;AAJL,GAhCuB;AAsC/BQ,EAAAA,MAAM,EAAE;AACNR,IAAAA,SAAS,EAAE,QADL;AAENF,IAAAA,KAAK,EAAE,OAFD;AAGNC,IAAAA,QAAQ,EAAE,EAHJ;AAINH,IAAAA,SAAS,EAAE/D,EAAE,CAAC,IAAD,CAJP;AAKNgE,IAAAA,YAAY,EAAEhE,EAAE,CAAC,IAAD,CALV;AAMN4E,IAAAA,UAAU,EAAE;AANN,GAtCuB;AA8C/BC,EAAAA,GAAG,EAAE;AACHZ,IAAAA,KAAK,EAAE;AADJ,GA9C0B;AAiD/Ba,EAAAA,IAAI,EAAE;AACJ7B,IAAAA,IAAI,EAAE,CADF;AAEJmB,IAAAA,eAAe,EAAE,MAFb;AAGJN,IAAAA,UAAU,EAAE,QAHR;AAIJX,IAAAA,cAAc,EAAE;AAJZ,GAjDyB;AAuD/B4B,EAAAA,SAAS,EAAE;AACT3B,IAAAA,UAAU,EAAE,CADH;AAETC,IAAAA,WAAW,EAAE,CAFJ;AAGT2B,IAAAA,MAAM,EAAE,EAHC;AAITC,IAAAA,KAAK,EAAEnF,EAAE,CAAC,KAAD,CAJA;AAKToF,IAAAA,WAAW,EAAE,EALJ;AAMTd,IAAAA,eAAe,EAAE,OANR;AAOTe,IAAAA,WAAW,EAAE,MAPJ;AAQTC,IAAAA,YAAY,EAAE,CARL;AASTpB,IAAAA,YAAY,EAAEhE,EAAE,CAAC,IAAD;AATP,GAvDoB;AAkE/BqF,EAAAA,MAAM,EAAE;AACNZ,IAAAA,QAAQ,EAAE,UADJ;AAENa,IAAAA,MAAM,EAAEtF,EAAE,CAAC,KAAD,CAFJ;AAGNuE,IAAAA,MAAM,EAAE,CAHF;AAINJ,IAAAA,SAAS,EAAE,QAJL;AAKNoB,IAAAA,kBAAkB,EAAE,WALd;AAMNjB,IAAAA,UAAU,EAAE,EANN;AAONkB,IAAAA,aAAa,EAAE,EAPT;AAQNN,IAAAA,WAAW,EAAE,EARP;AASNO,IAAAA,YAAY,EAAE,EATR;AAUNxB,IAAAA,KAAK,EAAE;AAVD,GAlEuB;AA8E/ByB,EAAAA,MAAM,EAAE;AACNzB,IAAAA,KAAK,EAAE,OADD;AAEND,IAAAA,YAAY,EAAEhE,EAAE,CAAC,IAAD,CAFV;AAGN+D,IAAAA,SAAS,EAAE/D,EAAE,CAAC,IAAD,CAHP;AAINmE,IAAAA,SAAS,EAAE;AAJL,GA9EuB;AAoF/BwB,EAAAA,WAAW,EAAE;AACXvB,IAAAA,eAAe,EAAE,SADN;AAEXL,IAAAA,SAAS,EAAE/D,EAAE,CAAC,IAAD,CAFF;AAGXgE,IAAAA,YAAY,EAAEhE,EAAE,CAAC,MAAD,CAHL;AAIXsE,IAAAA,UAAU,EAAEtE,EAAE,CAAC,IAAD,CAJH;AAKXwF,IAAAA,aAAa,EAAExF,EAAE,CAAC,IAAD,CALN;AAMXkF,IAAAA,WAAW,EAAEpF,EAAE,CAAC,IAAD,CANJ;AAOX2F,IAAAA,YAAY,EAAE3F,EAAE,CAAC,IAAD;AAPL,GApFkB;AAqG/B8F,EAAAA,UAAU,EAAE;AACV3B,IAAAA,KAAK,EAAE,OADG;AAEVE,IAAAA,SAAS,EAAE,QAFD;AAGVD,IAAAA,QAAQ,EAAE;AAHA;AArGmB,CAAlB,CAAf;;AA6GA,IAAM2B,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACL3D,IAAAA,IAAI,EAAE2D,KAAK,CAAC3D,IADP;AAELP,IAAAA,OAAO,EAAEkE,KAAK,CAAClE;AAFV,GAAP;AAID,CALD;;AAOA,IAAMmE,kBAAkB,GAAG;AACzB7F,EAAAA,UAAU,EAAVA,UADyB;AAEzBC,EAAAA,cAAc,EAAdA;AAFyB,CAA3B;AAIA,eAAeF,OAAO,CAAC4F,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C9E,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport { CheckBox, Text, View, StyleSheet, ScrollView, TouchableOpacity, Image } from 'react-native'\r\nimport TopMenu from \"../../component/Menu/TopMenu\"\r\nimport {\r\n  widthPercentageToDP as wp,\r\n  heightPercentageToDP as hp,\r\n} from 'react-native-responsive-screen';\r\nimport { connect } from 'react-redux';\r\nimport { addContact, setContactInfo } from \"../../Action\"\r\nimport { Card, Icon, Input, Avatar } from 'react-native-elements'\r\nimport { TextInput } from 'react-native-paper';\r\nimport HeaderNewContact from \"../../component/Menu/HeaderNewContact\";\r\nimport {KeyboardAwareScrollView} from 'react-native-keyboard-aware-scrollview'\r\nimport { Container, Header, Content, Form, Item, Label } from 'native-base';\r\nclass NewContact extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      error: null,\r\n\r\n    }\r\n    this.firstName = \"\";\r\n    this.lastName = \"\";\r\n    this.email = \"\";\r\n    this.phone = \"\";\r\n    this.onClickaddContact = this.onClickaddContact.bind(this)\r\n  }\r\n\r\n\r\n  onChangeInput(text, type) {\r\n    this[type] = text;\r\n  }\r\n\r\n  onClickaddContact() {\r\n    let contact = {\r\n      nomContact: this.firstName,\r\n      prenomContact: this.lastName,\r\n      emailContact: this.email,\r\n      numContact: this.phone,\r\n      idUser: this.props.user.user.idUser\r\n    }\r\n\r\n    console.log(contact)\r\n    if (contact.nomContact != '' && contact.prenomContact != '' && contact.numContact != '') {\r\n      this.props.addContact(contact);\r\n      this.props.setContactInfo(contact.idUser)\r\n      this.gotToProfil();\r\n    } else {\r\n    //.log(contact);\r\n    this.setState({\r\n      error: 'Veuillez completer les champs'\r\n    });\r\n    this.props.navigation.navigate(\"NewContact\")\r\n\r\n    }\r\n  }\r\n\r\n\r\n  gotToProfil() {\r\n    this.props.navigation.push(\"ContactUrgence\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={Platform.OS === 'ios' ? styles.under_ios : styles.under}>\r\n        <HeaderNewContact navigation={this.props.navigation} addContact={1} saveContact={this.onClickaddContact}/>\r\n        </View>\r\n\r\n        <KeyboardAwareScrollView style={{ flex: 1 }} getTextInputRefs={() => { return [this._textInputRef];}}>\r\n        <View style={{flex : 1,justifyContent : \"center\",marginLeft : 20, marginRight : 20}} >\r\n          <View style={styles.contain_avatar}>\r\n              <Avatar rounded icon={{ name: 'phone' }} size={90}/>\r\n          </View>\r\n\r\n          <View style={styles.contain_list}>\r\n          <Form>\r\n          <Item stackedLabel>\r\n            <Label style={styles.my_label}>Prénom</Label>\r\n            <Input inputStyle={{'color': 'black'}} onChangeText={(text) => this.firstName = text}/>\r\n          </Item>\r\n        \r\n          \r\n          <Item stackedLabel last>\r\n          <Label style={styles.my_label}>Nom</Label>\r\n          <Input inputStyle={{'color': 'black'}} onChangeText={(text) => this.lastName = text}/>\r\n          </Item>\r\n        \r\n          <Item stackedLabel last>\r\n          <Label style={styles.my_label}>Adresse email</Label>\r\n          <Input inputStyle={{'color': 'black'}} onChangeText={(text) => this.email = text}/>\r\n          </Item>\r\n      \r\n          <Item stackedLabel last>\r\n          <Label style={styles.my_label}>Téléphone</Label>\r\n          <Input inputStyle={{'color': 'black'}} \r\n          keyboardType={\"numeric\"}\r\n          onChangeText={(text) => this.phone = text}/>\r\n          </Item>\r\n        </Form>\r\n          </View>\r\n\r\n          {\r\n            /**\r\n                         <TextInput\r\n              style={{ marginBottom : 5 }}\r\n              onChangeText={(text) => this.firstName = text}\r\n              mode=\"outlined\"\r\n              label=\"Prénom\"\r\n              ref={input => { this.textInput = input }}\r\n            />\r\n            <TextInput\r\n              style={{ marginBottom : 5 }}\r\n              onChangeText={(text) => this.lastName = text}\r\n              mode=\"outlined\"\r\n              label=\"Nom\"\r\n              ref={input => { this.textInput = input }}\r\n            />\r\n\r\n          <TextInput\r\n            style={{ marginBottom : 5 }}\r\n            autoCapitalize=\"none\"\r\n            onChangeText={(text) => this.email = text}\r\n            mode=\"outlined\"\r\n            label=\"Adresse email\"\r\n            ref={input => { this.textInput = input }}\r\n          />\r\n\r\n          <TextInput\r\n            style={{ marginBottom : 5 }}\r\n            keyboardType=\"numeric\"\r\n            onChangeText={(text) => this.phone = text}\r\n            mode=\"outlined\"\r\n            label=\"Téléphone\"\r\n            ref={input => { this.textInput = input }}\r\n          />\r\n\r\n\r\n\r\n\r\n\r\n          <TouchableOpacity\r\n            style={styles.buttonStyle}\r\n            onPress={(e) => { this.onClickaddContact() }}\r\n          >\r\n            <Text style={styles.buttonText}>Enregistrer le contact </Text>\r\n          </TouchableOpacity>\r\n          <Image\r\n            style={{ width: wp('13%'), height: wp('13%'), position: \"relative\", bottom: hp('12.5%'), left: wp('70%') }}\r\n            source={require('../../images/icon_urf_bleu.png')}\r\n          />\r\n           */\r\n\r\n        }\r\n\r\n          {this.state.error !== null && <Text style={styles.text_error}>{this.state.error}</Text>}\r\n\r\n        </View>\r\n        </KeyboardAwareScrollView>\r\n\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  contain_avatar: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 40,\r\n    marginBottom: 10\r\n  },\r\n  text_error: {\r\n    color: 'red',\r\n    fontSize: 16,\r\n    marginTop: -50,\r\n    textAlign: 'center',\r\n    alignItems: 'center'\r\n  },  \r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n    \r\n\r\n  },\r\n  container2: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n\r\n    alignItems: 'center',\r\n    paddingTop: hp('8%'),\r\n\r\n    zIndex: 2\r\n  },\r\n  header: {\r\n    position: 'relative',\r\n    top: hp(\"20%\"),\r\n    zIndex: 4,\r\n    textAlign: 'center'\r\n  },\r\n  center: {\r\n    textAlign: 'center',\r\n    color: \"white\",\r\n    fontSize: 23,\r\n    marginTop: hp('1%'),\r\n    marginBottom: hp('1%'),\r\n    fontWeight: 'bold'\r\n  },\r\n  red: {\r\n    color: 'red'\r\n  },\r\n  body: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  textinput: {\r\n    marginLeft: 5,\r\n    marginRight: 5,\r\n    height: 50,\r\n    width: wp(\"70%\"),\r\n    paddingLeft: 15,\r\n    backgroundColor: 'white',\r\n    borderColor: \"#000\",\r\n    borderRadius: 3,\r\n    marginBottom: hp('2%')\r\n  },\r\n  footer: {\r\n    position: 'relative',\r\n    bottom: hp(\"10%\"),\r\n    zIndex: 4,\r\n    textAlign: 'center',\r\n    textDecorationLine: 'underline',\r\n    paddingTop: 15,\r\n    paddingBottom: 15,\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n    color: \"white\"\r\n  },\r\n  title2: {\r\n    color: \"white\",\r\n    marginBottom: hp('1%'),\r\n    marginTop: hp('1%'),\r\n    textAlign: \"center\"\r\n  },\r\n  buttonStyle: {\r\n    backgroundColor: \"#008ac8\",\r\n    marginTop: hp(\"2%\"),\r\n    marginBottom: hp(\"2.5%\"),\r\n    paddingTop: hp('3%'),\r\n    paddingBottom: hp('3%'),\r\n    paddingLeft: wp(\"2%\"),\r\n    paddingRight: wp(\"2%\")\r\n    /*  marginTop: hp(\"3%\"), \r\n     width: wp(\"60%\"), \r\n     marginLeft: wp('5%'),\r\n     borderColor:'red',\r\n     backgroundColor: \"#008AC8\",\r\n     paddingTop: hp('3%'),\r\n     paddingBottom: hp('3%'),\r\n     marginBottom: hp(\"5%\") */\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    textAlign: \"center\",\r\n    fontSize: 16\r\n  },\r\n\r\n})\r\n\r\nconst mapStateToProps = (store) => {\r\n  return {\r\n    user: store.user,\r\n    contact: store.contact\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addContact,\r\n  setContactInfo\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewContact)"]},"metadata":{},"sourceType":"module"}