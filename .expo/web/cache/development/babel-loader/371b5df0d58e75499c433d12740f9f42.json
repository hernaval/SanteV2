{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\Projets\\\\Acadys\\\\best4sante\\\\SanteV2\\\\assets\\\\Screens\\\\Rappel\\\\EventTraitement.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Agenda } from 'react-native-calendars';\nimport * as firebase from 'firebase';\nimport firestore from 'firebase/firestore';\nimport { cond } from 'react-native-reanimated';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faUpload, faCalendar, faClock, faCalendarAlt, faLocationArrow } from '@fortawesome/free-solid-svg-icons';\nimport TopMenu from \"../../component/Menu/TopMenu\";\nimport { connect } from 'react-redux';\n\nvar testIDs = require(\"./testID\");\n\nvar EventTraitement = function (_Component) {\n  _inherits(EventTraitement, _Component);\n\n  var _super = _createSuper(EventTraitement);\n\n  function EventTraitement(props) {\n    var _this;\n\n    _classCallCheck(this, EventTraitement);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidMount = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(_this.fetchTraitement());\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.renderRendezVous = function () {\n      return React.createElement(Agenda, {\n        testID: testIDs.agenda.CONTAINER,\n        items: _this.state.items,\n        loadItemsForMonth: _this.loadItems.bind(_assertThisInitialized(_this)),\n        selected: '2020-06-08',\n        renderItem: _this.renderItem.bind(_assertThisInitialized(_this)),\n        renderEmptyDate: _this.renderEmptyDate.bind(_assertThisInitialized(_this)),\n        rowHasChanged: _this.rowHasChanged.bind(_assertThisInitialized(_this)),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      });\n    };\n\n    _this.fetchTraitement = function _callee2() {\n      var ob;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              ob = {};\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(firebase.firestore().collection(\"rappelTraitement\").where(\"iduser\", \"==\", _this.props.user.user.data.user[0].id).get().then(function (querySnapshot) {\n                querySnapshot.forEach(function (doc) {\n                  var strTime = doc.data().dateDebTrait;\n                  console.log(strTime);\n\n                  if (!_this.state.items[strTime]) {\n                    _this.state.items[strTime] = [];\n\n                    _this.state.items[strTime].push({\n                      name: doc.data().nomTrait + \" de \" + doc.data().dateDebTrait + \" Ã  \" + doc.data().dateFinTrait,\n                      heure: doc.data().heureTrait,\n                      lieu: doc.data().momentTrait\n                    });\n                  }\n                });\n              }));\n\n            case 3:\n              console.log(_this.state.items);\n              Object.keys(_this.state.items).forEach(function (key) {\n                ob[key] = _this.state.items[key];\n              });\n\n              _this.setState({\n                items: ob\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      items: {},\n      dateson: {}\n    };\n    return _this;\n  }\n\n  _createClass(EventTraitement, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: Platform.OS === 'ios' ? styles.under_ios : styles.under,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, React.createElement(TopMenu, {\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      })), this.renderRendezVous(), React.createElement(View, {\n        style: styles.tabBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.headerBtn,\n        onPress: function onPress() {\n          _this2.props.navigation.navigate(\"AddEvent\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.headerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }, \"Ajouter un rappel\"))));\n    }\n  }, {\n    key: \"loadItems\",\n    value: function loadItems(day) {}\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      return React.createElement(TouchableOpacity, {\n        testID: testIDs.agenda.ITEM,\n        style: [styles.item, {\n          height: item.height\n        }],\n        onPress: function onPress() {\n          return Alert.alert(item.name);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, item.name), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, item.heure), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, item.lieu));\n    }\n  }, {\n    key: \"renderEmptyDate\",\n    value: function renderEmptyDate() {\n      return React.createElement(View, {\n        style: styles.emptyDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, \"This is empty date!\"));\n    }\n  }, {\n    key: \"rowHasChanged\",\n    value: function rowHasChanged(r1, r2) {\n      return r1.name !== r2.name;\n    }\n  }, {\n    key: \"timeToString\",\n    value: function timeToString(time) {\n      var date = new Date(time);\n      return date.toISOString().split('T')[0];\n    }\n  }]);\n\n  return EventTraitement;\n}(Component);\n\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: 'white',\n    flex: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginRight: 10,\n    marginTop: 17\n  },\n  emptyDate: {\n    height: 15,\n    flex: 1,\n    paddingTop: 30\n  },\n  tabBtn: {\n    marginTop: 20,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  headerBtn: {\n    padding: 20,\n    backgroundColor: \"#008AC8\"\n  },\n  headerBtnActive: {\n    backgroundColor: \"#d3d3d3\",\n    padding: 20\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    user: store.user,\n    contact: store.contact,\n    favorite: store.favorite,\n    second: store.second\n  };\n};\n\nvar mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(EventTraitement);","map":{"version":3,"sources":["E:/Projets/Acadys/best4sante/SanteV2/assets/Screens/Rappel/EventTraitement.js"],"names":["React","Component","Agenda","firebase","firestore","cond","FontAwesomeIcon","faUpload","faCalendar","faClock","faCalendarAlt","faLocationArrow","TopMenu","connect","testIDs","require","EventTraitement","props","componentDidMount","fetchTraitement","renderRendezVous","agenda","CONTAINER","state","items","loadItems","bind","renderItem","renderEmptyDate","rowHasChanged","ob","collection","where","user","data","id","get","then","querySnapshot","forEach","doc","strTime","dateDebTrait","console","log","push","name","nomTrait","dateFinTrait","heure","heureTrait","lieu","momentTrait","Object","keys","key","setState","dateson","flex","Platform","OS","styles","under_ios","under","navigation","tabBtn","headerBtn","navigate","headerText","day","item","ITEM","height","Alert","alert","fontWeight","emptyDate","r1","r2","time","date","Date","toISOString","split","StyleSheet","create","backgroundColor","borderRadius","padding","marginRight","marginTop","paddingTop","flexDirection","justifyContent","headerBtnActive","mapStateToProps","store","contact","favorite","second","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,eAAT,QAAgC,uCAAhC;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,OAA/B,EAAwCC,aAAxC,EAAuDC,eAAvD,QAA8E,mCAA9E;AACA,OAAOC,OAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAMC,OAAO,GAAGC,OAAO,YAAvB;;IAGOC,e;;;;;AACH,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAWnBC,iBAXmB,GAWC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEX,MAAKC,eAAL,EAFW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXD;;AAAA,UAgBnBC,gBAhBmB,GAgBA;AAAA,aACf,oBAAC,MAAD;AACY,QAAA,MAAM,EAAEN,OAAO,CAACO,MAAR,CAAeC,SADnC;AAEY,QAAA,KAAK,EAAE,MAAKC,KAAL,CAAWC,KAF9B;AAGY,QAAA,iBAAiB,EAAE,MAAKC,SAAL,CAAeC,IAAf,+BAH/B;AAIY,QAAA,QAAQ,EAAE,YAJtB;AAKY,QAAA,UAAU,EAAE,MAAKC,UAAL,CAAgBD,IAAhB,+BALxB;AAMY,QAAA,eAAe,EAAE,MAAKE,eAAL,CAAqBF,IAArB,+BAN7B;AAOY,QAAA,aAAa,EAAE,MAAKG,aAAL,CAAmBH,IAAnB,+BAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADe;AAAA,KAhBA;;AAAA,UAwEnBP,eAxEmB,GAwED;AAAA;AAAA;AAAA;AAAA;AAAA;AACRW,cAAAA,EADQ,GACH,EADG;AAAA;AAAA,+CAER3B,QAAQ,CAACC,SAAT,GAAqB2B,UAArB,CAAgC,kBAAhC,EAAoDC,KAApD,CAA0D,QAA1D,EAAoE,IAApE,EAA0E,MAAKf,KAAL,CAAWgB,IAAX,CAAgBA,IAAhB,CAAqBC,IAArB,CAA0BD,IAA1B,CAA+B,CAA/B,EAAkCE,EAA5G,EAAgHC,GAAhH,GACDC,IADC,CACI,UAAAC,aAAa,EAAI;AACnBA,gBAAAA,aAAa,CAACC,OAAd,CAAsB,UAAAC,GAAG,EAAI;AAEzB,sBAAMC,OAAO,GAAGD,GAAG,CAACN,IAAJ,GAAWQ,YAA3B;AACAC,kBAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AACA,sBAAI,CAAC,MAAKlB,KAAL,CAAWC,KAAX,CAAiBiB,OAAjB,CAAL,EAAgC;AAE5B,0BAAKlB,KAAL,CAAWC,KAAX,CAAiBiB,OAAjB,IAA4B,EAA5B;;AACA,0BAAKlB,KAAL,CAAWC,KAAX,CAAiBiB,OAAjB,EAA0BI,IAA1B,CAA+B;AAC3BC,sBAAAA,IAAI,EAAEN,GAAG,CAACN,IAAJ,GAAWa,QAAX,GAAoB,MAApB,GAA2BP,GAAG,CAACN,IAAJ,GAAWQ,YAAtC,GAAmD,KAAnD,GAAyDF,GAAG,CAACN,IAAJ,GAAWc,YAD/C;AAE3BC,sBAAAA,KAAK,EAAET,GAAG,CAACN,IAAJ,GAAWgB,UAFS;AAG3BC,sBAAAA,IAAI,EAAEX,GAAG,CAACN,IAAJ,GAAWkB;AAHU,qBAA/B;AAMH;AACJ,iBAdD;AAeH,eAjBC,CAFQ;;AAAA;AAqBdT,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAKrB,KAAL,CAAWC,KAAvB;AACA6B,cAAAA,MAAM,CAACC,IAAP,CAAY,MAAK/B,KAAL,CAAWC,KAAvB,EAA8Be,OAA9B,CAAsC,UAAAgB,GAAG,EAAI;AAAEzB,gBAAAA,EAAE,CAACyB,GAAD,CAAF,GAAU,MAAKhC,KAAL,CAAWC,KAAX,CAAiB+B,GAAjB,CAAV;AAAiC,eAAhF;;AAEA,oBAAKC,QAAL,CAAc;AAAEhC,gBAAAA,KAAK,EAAEM;AAAT,eAAd;;AAxBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxEC;;AAGf,UAAKP,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETiC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAHe;AASlB;;;;6BAmCQ;AAAA;;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwBC,MAAM,CAACC,SAA/B,GAA2CD,MAAM,CAACE,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,UAAU,EAAE,KAAK9C,KAAL,CAAW+C,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAKK,KAAK5C,gBAAL,EALL,EAQI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEyC,MAAM,CAACI,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEJ,MAAM,CAACK,SAAhC;AAA2C,QAAA,OAAO,EAAI,mBAAM;AACzD,UAAA,MAAI,CAACjD,KAAL,CAAW+C,UAAX,CAAsBG,QAAtB,CAA+B,UAA/B;AACF,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACO,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHJ,CAFJ,CARJ,CADJ;AAwBH;;;8BA8BSC,G,EAAK,CAEd;;;+BAEUC,I,EAAM;AACb,aACI,oBAAC,gBAAD;AAEI,QAAA,MAAM,EAAExD,OAAO,CAACO,MAAR,CAAekD,IAF3B;AAGI,QAAA,KAAK,EAAE,CAACV,MAAM,CAACS,IAAR,EAAc;AAAEE,UAAAA,MAAM,EAAEF,IAAI,CAACE;AAAf,SAAd,CAHX;AAII,QAAA,OAAO,EAAE;AAAA,iBAAMC,KAAK,CAACC,KAAN,CAAYJ,IAAI,CAACxB,IAAjB,CAAN;AAAA,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAE6B,UAAAA,UAAU,EAAE;AAAd,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCL,IAAI,CAACxB,IAA3C,CANJ,EAOI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOwB,IAAI,CAACrB,KAAZ,CAPJ,EAQI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOqB,IAAI,CAACnB,IAAZ,CARJ,CADJ;AAcH;;;sCAEiB;AACd,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEU,MAAM,CAACe,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,CADJ;AAKH;;;kCAEaC,E,EAAIC,E,EAAI;AAClB,aAAOD,EAAE,CAAC/B,IAAH,KAAYgC,EAAE,CAAChC,IAAtB;AACH;;;iCAEYiC,I,EAAM;AACf,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAb;AACA,aAAOC,IAAI,CAACE,WAAL,GAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAP;AACH;;;;EAxI0BlF,S;;AA2I/B,IAAM4D,MAAM,GAAGuB,UAAU,CAACC,MAAX,CAAkB;AAC7Bf,EAAAA,IAAI,EAAE;AACFgB,IAAAA,eAAe,EAAE,OADf;AAEF5B,IAAAA,IAAI,EAAE,CAFJ;AAGF6B,IAAAA,YAAY,EAAE,CAHZ;AAIFC,IAAAA,OAAO,EAAE,EAJP;AAKFC,IAAAA,WAAW,EAAE,EALX;AAMFC,IAAAA,SAAS,EAAE;AANT,GADuB;AAS7Bd,EAAAA,SAAS,EAAE;AACPJ,IAAAA,MAAM,EAAE,EADD;AAEPd,IAAAA,IAAI,EAAE,CAFC;AAGPiC,IAAAA,UAAU,EAAE;AAHL,GATkB;AAc7B1B,EAAAA,MAAM,EAAE;AACJyB,IAAAA,SAAS,EAAG,EADR;AAEJE,IAAAA,aAAa,EAAE,KAFX;AAGJC,IAAAA,cAAc,EAAE;AAHZ,GAdqB;AAmB7B3B,EAAAA,SAAS,EAAG;AACRsB,IAAAA,OAAO,EAAG,EADF;AAERF,IAAAA,eAAe,EAAG;AAFV,GAnBiB;AAuB7BQ,EAAAA,eAAe,EAAG;AACdR,IAAAA,eAAe,EAAG,SADJ;AAEdE,IAAAA,OAAO,EAAG;AAFI;AAvBW,CAAlB,CAAf;;AA8BA,IAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACL/D,IAAAA,IAAI,EAAE+D,KAAK,CAAC/D,IADP;AAELgE,IAAAA,OAAO,EAAED,KAAK,CAACC,OAFV;AAGLC,IAAAA,QAAQ,EAAEF,KAAK,CAACE,QAHX;AAILC,IAAAA,MAAM,EAAEH,KAAK,CAACG;AAJT,GAAP;AAMD,CAPH;;AASE,IAAMC,kBAAkB,GAAG,EAA3B;AAGA,eAAevF,OAAO,CAACkF,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CpF,eAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Alert, StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport { Agenda } from 'react-native-calendars';\r\nimport * as firebase from 'firebase';\r\nimport firestore from 'firebase/firestore'\r\nimport { cond } from 'react-native-reanimated';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\r\nimport { faUpload, faCalendar, faClock, faCalendarAlt, faLocationArrow } from '@fortawesome/free-solid-svg-icons';\r\nimport TopMenu from \"../../component/Menu/TopMenu\"\r\nimport { connect } from 'react-redux';\r\n\r\nconst testIDs = require('./testID');\r\n\r\n\r\n class EventTraitement extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: {},\r\n            dateson: {},\r\n             \r\n           \r\n        };\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n      \r\n       await this.fetchTraitement()\r\n    }\r\n\r\n    renderRendezVous  =() => (\r\n        <Agenda\r\n                    testID={testIDs.agenda.CONTAINER}\r\n                    items={this.state.items}\r\n                    loadItemsForMonth={this.loadItems.bind(this)}\r\n                    selected={'2020-06-08'}\r\n                    renderItem={this.renderItem.bind(this)}\r\n                    renderEmptyDate={this.renderEmptyDate.bind(this)}\r\n                    rowHasChanged={this.rowHasChanged.bind(this)}\r\n                    /* markingType={'period'}\r\n                     markedDates={{\r\n                        '2020-06-08': { textColor: '#43515c' },\r\n                        '2020-06-09': { textColor: '#43515c' },\r\n                        '2020-06-14': { startingDay: true, endingDay: true, color: 'blue' },\r\n                        '2020-06-21': { startingDay: true, color: 'blue' },\r\n                        '2020-06-22': { endingDay: true, color: 'gray' },\r\n                        '2020-06-24': { startingDay: true, color: 'gray' },\r\n                        '2020-06-25': { color: 'gray' },\r\n                        '2020-06-26': { endingDay: true, color: 'gray' }\r\n                    }}\r\n                \r\n                monthFormat={'yyyy'}\r\n                theme={{calendarBackground: 'white', agendaKnobColor: 'green'}}\r\n                 renderDay={(day, item) => (<Text>{day ? day.day: 'item'}</Text>)}\r\n                 hideExtraDays={true} */\r\n                />\r\n    )\r\n\r\n    render() {\r\n        return (\r\n            <View style={{ flex: 1 }}>\r\n                <View style={Platform.OS === 'ios' ? styles.under_ios : styles.under}>\r\n                    <TopMenu navigation={this.props.navigation} />\r\n                </View>\r\n\r\n                {this.renderRendezVous()}\r\n               \r\n\r\n                <View style={styles.tabBtn}>\r\n\r\n                    <TouchableOpacity style={styles.headerBtn} onPress={  () => {\r\n                       this.props.navigation.navigate(\"AddEvent\")\r\n                    }}>\r\n                        <Text style={styles.headerText}>Ajouter un rappel</Text>\r\n                    </TouchableOpacity>\r\n\r\n\r\n                   \r\n                </View>\r\n\r\n            </View>\r\n\r\n        );\r\n    }\r\n\r\n    \r\n    fetchTraitement = async () => {\r\n        const ob = {}\r\n        await firebase.firestore().collection(\"rappelTraitement\").where(\"iduser\", \"==\", this.props.user.user.data.user[0].id).get()\r\n            .then(querySnapshot => {\r\n                querySnapshot.forEach(doc => {\r\n\r\n                    const strTime = doc.data().dateDebTrait\r\n                    console.log(strTime)\r\n                    if (!this.state.items[strTime]) {\r\n\r\n                        this.state.items[strTime] = []\r\n                        this.state.items[strTime].push({\r\n                            name: doc.data().nomTrait+\" de \"+doc.data().dateDebTrait+\" Ã  \"+doc.data().dateFinTrait,\r\n                            heure: doc.data().heureTrait,\r\n                            lieu: doc.data().momentTrait,\r\n\r\n                        })\r\n                    }\r\n                })\r\n            })\r\n\r\n        console.log(this.state.items)\r\n        Object.keys(this.state.items).forEach(key => { ob[key] = this.state.items[key] })\r\n\r\n        this.setState({ items: ob })\r\n    }\r\n\r\n    loadItems(day) {\r\n\r\n    }\r\n\r\n    renderItem(item) {\r\n        return (\r\n            <TouchableOpacity\r\n\r\n                testID={testIDs.agenda.ITEM}\r\n                style={[styles.item, { height: item.height }]}\r\n                onPress={() => Alert.alert(item.name)}\r\n            >\r\n                <Text style={{ fontWeight: \"bold\" }}>{item.name}</Text>\r\n                <Text>{item.heure}</Text>\r\n                <Text>{item.lieu}</Text>\r\n\r\n\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n\r\n    renderEmptyDate() {\r\n        return (\r\n            <View style={styles.emptyDate}>\r\n                <Text>This is empty date!</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    rowHasChanged(r1, r2) {\r\n        return r1.name !== r2.name;\r\n    }\r\n\r\n    timeToString(time) {\r\n        const date = new Date(time);\r\n        return date.toISOString().split('T')[0];\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    item: {\r\n        backgroundColor: 'white',\r\n        flex: 1,\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginRight: 10,\r\n        marginTop: 17\r\n    },\r\n    emptyDate: {\r\n        height: 15,\r\n        flex: 1,\r\n        paddingTop: 30\r\n    },\r\n    tabBtn: {\r\n        marginTop : 20,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\"\r\n    },\r\n    headerBtn : {\r\n        padding : 20,\r\n        backgroundColor : \"#008AC8\"\r\n    },\r\n    headerBtnActive : {\r\n        backgroundColor : \"#d3d3d3\",\r\n        padding : 20,\r\n    },\r\n    \r\n});\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n      user: store.user,\r\n      contact: store.contact,\r\n      favorite: store.favorite,\r\n      second: store.second\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = {\r\n  \r\n  }\r\n  export default connect(mapStateToProps, mapDispatchToProps)(EventTraitement)"]},"metadata":{},"sourceType":"module"}