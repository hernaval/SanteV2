{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Stenny Gabriel\\\\best4sante\\\\Best4Sante\\\\assets\\\\component\\\\RappelDetail.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faHome, faBars, faTimes, faCaretDown, faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport * as DocumentPicker from 'expo-document-picker';\nimport { connect } from 'react-redux';\nimport Bdd from \"../API/Bdd\";\nimport axios from 'axios';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport TopMenu from \"./Menu/TopMenu\";\nimport PopNav from \"./Menu/PopNav\";\n\nvar Rappel = function (_React$Component) {\n  _inherits(Rappel, _React$Component);\n\n  var _super = _createSuper(Rappel);\n\n  function Rappel(props) {\n    var _this;\n\n    _classCallCheck(this, Rappel);\n\n    _this = _super.call(this, props);\n\n    _this._pickDocument = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(DocumentPicker.getDocumentAsync({}));\n\n            case 2:\n              result = _context.sent;\n              alert(result.uri);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.goToMapping = function () {\n      _this.props.navigation.navigate(\"Home\");\n    };\n\n    _this.state = {\n      matin: false,\n      midi: false,\n      soir: false,\n      monday: false,\n      tuesday: false,\n      wednesday: false,\n      thirsday: false,\n      friday: false,\n      saturday: false,\n      sunday: false,\n      name: \"\",\n      time: new Date(),\n      matinHour: null,\n      midiHour: null,\n      soirHour: null,\n      type: \"matin\",\n      isOpenTime: false\n    };\n    return _this;\n  }\n\n  _createClass(Rappel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var data = {\n        id: this.props.navigation.state.params.id\n      };\n      axios.post(Bdd.api_url + \"/api/rappel/detail\", data).then(function (response) {\n        _this2.setState({\n          matin: response.data.rappel.morning === 1 ? true : false,\n          midi: response.data.rappel.hd === 1 ? true : false,\n          soir: response.data.rappel.evening === 1 ? true : false,\n          monday: response.data.rappel.monday === 1 ? true : false,\n          tuesday: response.data.rappel.tuesday === 1 ? true : false,\n          wednesday: response.data.rappel.wednesday === 1 ? true : false,\n          thirsday: response.data.rappel.thirsday === 1 ? true : false,\n          friday: response.data.rappel.friday === 1 ? true : false,\n          saturday: response.data.rappel.saturday === 1 ? true : false,\n          sunday: response.data.rappel.sunday === 1 ? true : false,\n          name: response.data.rappel.name.split(\"__\")[0],\n          matinHour: response.data.rappel.matinHour,\n          midiHour: response.data.rappel.midiHour,\n          soirHour: response.data.rappel.soirHour\n        });\n      });\n    }\n  }, {\n    key: \"goToRappelMenu\",\n    value: function goToRappelMenu() {\n      this.props.navigation.navigate(\"RappelMenu\");\n    }\n  }, {\n    key: \"changeDay\",\n    value: function changeDay(day) {\n      var newDay = !this.state[day];\n      this.setState(_defineProperty({}, day, newDay), function () {});\n    }\n  }, {\n    key: \"onClickUpdateRappel\",\n    value: function onClickUpdateRappel() {\n      var _this3 = this;\n\n      var data = {\n        name: this.state.name,\n        monday: this.state.monday,\n        tuesday: this.state.tuesday,\n        wednesday: this.state.wednesday,\n        thirsday: this.state.thirsday,\n        friday: this.state.friday,\n        saturday: this.state.saturday,\n        sunday: this.state.sunday,\n        morning: this.state.matin,\n        hd: this.state.midi,\n        evening: this.state.soir,\n        id: this.props.navigation.state.params.id\n      };\n      axios.post(Bdd.api_url + \"/api/rappel/update\", data).then(function (response) {\n        if (response.data.status === 200) {\n          _this3.goToRappelMenu();\n        }\n      });\n    }\n  }, {\n    key: \"change\",\n    value: function change(event, selectedDate) {\n      var hours = selectedDate.getHours() + ':' + selectedDate.getMinutes();\n\n      if (this.state.type === \"matin\") {\n        this.setState({\n          matinHour: hours,\n          isOpenTime: false\n        });\n      } else if (this.state.type === \"midi\") {\n        this.setState({\n          midiHour: hours,\n          isOpenTime: false\n        });\n      } else if (this.state.type === \"soir\") {\n        this.setState({\n          soirHour: hours,\n          isOpenTime: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: Platform.OS === 'ios' ? styles.under_ios : styles.under,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, React.createElement(TopMenu, {\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }\n      }, React.createElement(PopNav, {\n        navigation: this.props.navigation,\n        color: \"#000\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.imgLink,\n        source: require(\"../images/Icone_Clockwhite.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: styles.imgText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }\n      }, \"Mes rappels\")), React.createElement(View, {\n        style: styles.docView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Nom du rappel\",\n        value: this.state.name,\n        style: {\n          backgroundColor: \"white\",\n          width: wp('70%'),\n          textAlign: \"center\",\n          color: \"#008AC8\",\n          paddingTop: hp('2%'),\n          paddingBottom: hp('2%')\n        },\n        onChangeText: function onChangeText(text) {\n          _this4.setState({\n            name: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.docView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }\n      }, this.state.isOpenTime && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 47\n        }\n      }, React.createElement(DateTimePicker, {\n        testID: \"dateTimePicker\",\n        timeZoneOffsetInMinutes: 0,\n        value: this.state.time,\n        mode: \"time\",\n        is24Hour: true,\n        display: \"default\",\n        onChange: function onChange(event, selectedDate) {\n          _this4.change(event, selectedDate);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }\n      })), this.state.matin && React.createElement(TouchableOpacity, {\n        style: styles.showHour,\n        onPress: function onPress() {\n          _this4.setState({\n            isOpenTime: true,\n            type: \"matin\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 42\n        }\n      }, React.createElement(Text, {\n        style: styles.showHourText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }\n      }, \"Rappel du matin : \", this.state.matinHour !== null ? this.state.matinHour : \"Cliquez pour ajouter\")), this.state.midi && React.createElement(TouchableOpacity, {\n        style: styles.showHour,\n        onPress: function onPress() {\n          _this4.setState({\n            isOpenTime: true,\n            type: \"midi\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 41\n        }\n      }, React.createElement(Text, {\n        style: styles.showHourText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 25\n        }\n      }, \"Rappel du midi : \", this.state.midiHour !== null ? this.state.midiHour : \"Cliquez pour ajouter\")), this.state.soir && React.createElement(TouchableOpacity, {\n        style: styles.showHour,\n        onPress: function onPress() {\n          _this4.setState({\n            isOpenTime: true,\n            type: \"soir\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 41\n        }\n      }, React.createElement(Text, {\n        style: styles.showHourText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }\n      }, \"Rappel du soir : \", this.state.soirHour !== null ? this.state.soirHour : \"Cliquez pour ajouter\")), React.createElement(TouchableOpacity, {\n        style: styles.buttonSave,\n        onPress: function onPress() {\n          _this4.onClickUpdateRappel();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.docText2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }\n      }, \"Sauvegarder le rappel\"))));\n    }\n  }]);\n\n  return Rappel;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#008AC8\"\n  },\n  under3: {\n    flexDirection: 'row',\n    paddingTop: 40,\n    width: wp('100%'),\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  link: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingLeft: wp('25%'),\n    paddingTop: hp(\"7%\"),\n    paddingBottom: hp(\"1%\")\n  },\n  imgLink: {\n    width: wp('15%'),\n    height: wp('15%'),\n    backgroundColor: '#008AC8',\n    borderRadius: 400 / 2,\n    marginRight: wp('2%')\n  },\n  imgText: {\n    color: \"white\",\n    fontSize: 24\n  },\n  docView: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: hp(\"2%\"),\n    paddingBottom: hp(\"2%\")\n  },\n  docButton: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderWidth: 1,\n    borderColor: \"white\",\n    borderStyle: 'dashed',\n    borderRadius: 1,\n    paddingTop: hp(\"2%\"),\n    paddingBottom: hp(\"2%\"),\n    width: wp('70%')\n  },\n  docText: {\n    color: \"white\"\n  },\n  buttonSave: {\n    backgroundColor: \"#00C1B4\",\n    marginTop: hp('5%'),\n    width: wp('70%'),\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: hp(\"2%\"),\n    paddingBottom: hp(\"2%\")\n  },\n  docText2: {\n    color: \"white\",\n    fontSize: 18\n  },\n  viewButtons: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: hp(\"4%\")\n  },\n  viewButton: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: hp('1%'),\n    paddingBottom: hp('1%'),\n    paddingLeft: wp('2%'),\n    paddingRight: wp('2%'),\n    borderWidth: 1,\n    borderColor: \"white\"\n  },\n  viewButtonSelected: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: hp('1%'),\n    paddingBottom: hp('1%'),\n    paddingLeft: wp('2%'),\n    paddingRight: wp('2%'),\n    borderWidth: 1,\n    borderColor: \"white\",\n    backgroundColor: \"white\"\n  },\n  docTextSelected: {\n    color: \"#00C1B4\"\n  },\n  checkbox: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: hp('5%'),\n    color: \"white\"\n  },\n  showHour: {\n    marginTop: hp(\"2%\"),\n    marginBottom: hp(\"2%\")\n  },\n  showHourText: {\n    color: \"white\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"white\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    user: store.user,\n    contact: store.contact,\n    favorite: store.favorite,\n    second: store.second\n  };\n};\n\nvar mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Rappel);","map":{"version":3,"sources":["C:/Users/Stenny Gabriel/best4sante/Best4Sante/assets/component/RappelDetail.js"],"names":["React","widthPercentageToDP","wp","heightPercentageToDP","hp","FontAwesomeIcon","faHome","faBars","faTimes","faCaretDown","faChevronLeft","DocumentPicker","connect","Bdd","axios","DateTimePicker","TopMenu","PopNav","Rappel","props","_pickDocument","getDocumentAsync","result","alert","uri","goToMapping","navigation","navigate","state","matin","midi","soir","monday","tuesday","wednesday","thirsday","friday","saturday","sunday","name","time","Date","matinHour","midiHour","soirHour","type","isOpenTime","data","id","params","post","api_url","then","response","setState","rappel","morning","hd","evening","split","day","newDay","status","goToRappelMenu","event","selectedDate","hours","getHours","getMinutes","styles","container","Platform","OS","under_ios","under","link","imgLink","require","imgText","docView","backgroundColor","width","textAlign","color","paddingTop","paddingBottom","text","change","showHour","showHourText","buttonSave","onClickUpdateRappel","docText2","Component","StyleSheet","create","flex","under3","flexDirection","alignItems","justifyContent","paddingLeft","height","borderRadius","marginRight","fontSize","docButton","borderWidth","borderColor","borderStyle","docText","marginTop","viewButtons","viewButton","paddingRight","viewButtonSelected","docTextSelected","checkbox","marginBottom","borderBottomWidth","borderBottomColor","mapStateToProps","store","user","contact","favorite","second","mapDispatchToProps"],"mappings":"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","sourcesContent":["\r\n\r\n\r\nimport React from 'react';\r\nimport { StyleSheet, View, Text, Image, TextInput, TouchableOpacity, CheckBox } from 'react-native';\r\nimport {\r\n    widthPercentageToDP as wp,\r\n    heightPercentageToDP as hp,\r\n} from 'react-native-responsive-screen';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome'\r\nimport { faHome, faBars, faTimes, faCaretDown, faChevronLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport * as DocumentPicker from 'expo-document-picker'\r\nimport { connect } from 'react-redux'\r\nimport Bdd from '../API/Bdd'\r\nimport axios from 'axios'\r\nimport DateTimePicker from '@react-native-community/datetimepicker'\r\nimport TopMenu from \"./Menu/TopMenu\"\r\nimport PopNav from \"./Menu/PopNav\"\r\nclass Rappel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            matin: false,\r\n            midi: false,\r\n            soir: false,\r\n\r\n            monday: false,\r\n            tuesday: false,\r\n            wednesday: false,\r\n            thirsday: false,\r\n            friday: false,\r\n            saturday: false,\r\n            sunday: false,\r\n\r\n            name: \"\",\r\n            time: new Date(),\r\n            matinHour: null,\r\n            midiHour: null,\r\n            soirHour: null,\r\n            type: \"matin\",\r\n            isOpenTime: false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let data = {\r\n            id: this.props.navigation.state.params.id\r\n        }\r\n\r\n\r\n        axios.post(Bdd.api_url + \"/api/rappel/detail\", data)\r\n            .then((response) => {\r\n\r\n                // this.setState({rappels: response.data.rappels })\r\n                this.setState({\r\n                    matin: response.data.rappel.morning === 1 ? true : false,\r\n                    midi: response.data.rappel.hd === 1 ? true : false,\r\n                    soir: response.data.rappel.evening === 1 ? true : false,\r\n\r\n                    monday: response.data.rappel.monday === 1 ? true : false,\r\n                    tuesday: response.data.rappel.tuesday === 1 ? true : false,\r\n                    wednesday: response.data.rappel.wednesday === 1 ? true : false,\r\n                    thirsday: response.data.rappel.thirsday === 1 ? true : false,\r\n                    friday: response.data.rappel.friday === 1 ? true : false,\r\n                    saturday: response.data.rappel.saturday === 1 ? true : false,\r\n                    sunday: response.data.rappel.sunday === 1 ? true : false,\r\n\r\n                    name: response.data.rappel.name.split(\"__\")[0],\r\n\r\n                    matinHour: response.data.rappel.matinHour,\r\n                    midiHour: response.data.rappel.midiHour,\r\n                    soirHour: response.data.rappel.soirHour,\r\n                })\r\n            })\r\n    }\r\n\r\n    goToRappelMenu() {\r\n        this.props.navigation.navigate(\"RappelMenu\")\r\n    }\r\n\r\n    _pickDocument = async () => {\r\n        let result = await DocumentPicker.getDocumentAsync({});\r\n        alert(result.uri);\r\n\r\n    }\r\n\r\n    changeDay(day) {\r\n        let newDay = !this.state[day];\r\n        this.setState({ [day]: newDay }, () => {\r\n\r\n        });\r\n    }\r\n    goToMapping = () => {\r\n        this.props.navigation.navigate(\"Home\")\r\n    }\r\n\r\n    onClickUpdateRappel() {\r\n\r\n        let data = {\r\n            name: this.state.name,\r\n            monday: this.state.monday,\r\n            tuesday: this.state.tuesday,\r\n            wednesday: this.state.wednesday,\r\n            thirsday: this.state.thirsday,\r\n            friday: this.state.friday,\r\n            saturday: this.state.saturday,\r\n            sunday: this.state.sunday,\r\n            morning: this.state.matin,\r\n            hd: this.state.midi,\r\n            evening: this.state.soir,\r\n            id: this.props.navigation.state.params.id\r\n        }\r\n\r\n\r\n\r\n        axios.post(Bdd.api_url + \"/api/rappel/update\", data)\r\n            .then((response) => {\r\n\r\n                if (response.data.status === 200) {\r\n                    this.goToRappelMenu();\r\n                }\r\n            })\r\n    }\r\n\r\n    change(event, selectedDate) {\r\n\r\n\r\n        let hours = selectedDate.getHours() + ':' + selectedDate.getMinutes()\r\n\r\n        if (this.state.type === \"matin\") {\r\n\r\n            this.setState({ matinHour: hours, isOpenTime: false })\r\n\r\n        } else if (this.state.type === \"midi\") {\r\n\r\n            this.setState({ midiHour: hours, isOpenTime: false })\r\n\r\n        } else if (this.state.type === \"soir\") {\r\n\r\n            this.setState({ soirHour: hours, isOpenTime: false })\r\n\r\n        }\r\n        //const currentDate = selectedDate || this.state.time;\r\n        //setShow(Platform.OS === 'ios');\r\n        //setDate(currentDate);\r\n        // this.setState({time: currentDate});\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={Platform.OS === 'ios' ? styles.under_ios : styles.under}>\r\n                    <TopMenu navigation={this.props.navigation} />\r\n                </View>\r\n\r\n                <View>\r\n                    <PopNav navigation={this.props.navigation} color={\"#000\"} />\r\n                </View>\r\n                <View\r\n                    style={styles.link}\r\n                >\r\n                    <Image\r\n                        style={styles.imgLink}\r\n                        source={require('../images/Icone_Clockwhite.png')}\r\n                    />\r\n                    <Text style={styles.imgText}>Mes rappels</Text>\r\n                </View>\r\n                <View style={styles.docView}>\r\n                    <TextInput\r\n                        placeholder=\"Nom du rappel\"\r\n                        value={this.state.name}\r\n                        style={{ backgroundColor: \"white\", width: wp('70%'), textAlign: \"center\", color: \"#008AC8\", paddingTop: hp('2%'), paddingBottom: hp('2%') }}\r\n                        onChangeText={(text) => {\r\n                            this.setState({ name: text });\r\n                        }}\r\n                    />\r\n                </View>\r\n                {/* <View style={styles.viewButtons}>\r\n                    <TouchableOpacity\r\n                        style={this.state.monday ? styles.viewButtonSelected : styles.viewButton}\r\n                        onPress={() => {\r\n                            this.changeDay('monday');\r\n                        }}\r\n                    >\r\n                        <Text style={this.state.monday ? styles.docTextSelected : styles.docText}>Lun</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        style={this.state.tuesday ? styles.viewButtonSelected : styles.viewButton}\r\n                        onPress={() => {\r\n                            this.changeDay('tuesday');\r\n                        }}\r\n                    >\r\n                        <Text style={this.state.tuesday ? styles.docTextSelected : styles.docText}>Mar</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        style={this.state.wednesday ? styles.viewButtonSelected : styles.viewButton}\r\n                        onPress={() => {\r\n                            this.changeDay('wednesday');\r\n                        }}\r\n                    >\r\n                        <Text style={this.state.wednesday ? styles.docTextSelected : styles.docText}>Mer</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        style={this.state.thirsday ? styles.viewButtonSelected : styles.viewButton}\r\n                        onPress={() => {\r\n                            this.changeDay('thirsday');\r\n                        }}\r\n                    >\r\n                        <Text style={this.state.thirsday ? styles.docTextSelected : styles.docText}>Jeu</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        style={this.state.friday ? styles.viewButtonSelected : styles.viewButton}\r\n                        onPress={() => {\r\n                            this.changeDay('friday');\r\n                        }}\r\n                    >\r\n                        <Text style={this.state.friday ? styles.docTextSelected : styles.docText}>Ven</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        style={this.state.saturday ? styles.viewButtonSelected : styles.viewButton}\r\n                        onPress={() => {\r\n                            this.changeDay('saturday');\r\n                        }}\r\n                    >\r\n                        <Text style={this.state.saturday ? styles.docTextSelected : styles.docText}>Sam</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        style={this.state.sunday ? styles.viewButtonSelected : styles.viewButton}\r\n                        onPress={() => {\r\n                            this.changeDay('sunday');\r\n                        }}\r\n                    >\r\n                        <Text style={this.state.sunday ? styles.docTextSelected : styles.docText}>Dim</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={styles.checkbox}>\r\n                    <View style={{ flexDirection: 'row', alignItems: \"center\", }}>\r\n                        <CheckBox\r\n                            onChange={(e) => { this.setState({ matin: !this.state.matin }) }}\r\n                            value={this.state.matin}\r\n\r\n                        /><Text style={{ color: 'white' }}>matin</Text>\r\n                    </View>\r\n                    <View style={{ flexDirection: 'row', alignItems: \"center\", }}>\r\n                        <CheckBox\r\n                            onChange={(e) => { this.setState({ midi: !this.state.midi }) }}\r\n                            value={this.state.midi}\r\n\r\n                        /><Text style={{ color: 'white' }}>midi</Text>\r\n                    </View>\r\n                    <View style={{ flexDirection: 'row', alignItems: \"center\", }}>\r\n                        <CheckBox\r\n                            onChange={(e) => { this.setState({ soir: !this.state.soir }) }}\r\n                            value={this.state.soir}\r\n\r\n                        /><Text style={{ color: 'white' }}>soir</Text>\r\n                    </View>\r\n\r\n                </View> */}\r\n                <View style={styles.docView}>\r\n                    {this.state.isOpenTime && <View>\r\n                        <DateTimePicker\r\n                            testID=\"dateTimePicker\"\r\n                            timeZoneOffsetInMinutes={0}\r\n                            value={this.state.time}\r\n                            mode=\"time\"\r\n                            is24Hour={true}\r\n                            display=\"default\"\r\n                            onChange={(event, selectedDate) => {\r\n                                this.change(event, selectedDate);\r\n                            }}\r\n                        />\r\n                    </View>}\r\n                    {this.state.matin && <TouchableOpacity\r\n                        style={styles.showHour}\r\n                        onPress={() => {\r\n                            this.setState({ isOpenTime: true, type: \"matin\" })\r\n                        }}\r\n                    >\r\n                        <Text style={styles.showHourText}>Rappel du matin : {this.state.matinHour !== null ? this.state.matinHour : \"Cliquez pour ajouter\"}</Text>\r\n                    </TouchableOpacity>}\r\n                    {this.state.midi && <TouchableOpacity\r\n                        style={styles.showHour}\r\n                        onPress={() => {\r\n                            this.setState({ isOpenTime: true, type: \"midi\" })\r\n                        }}\r\n                    >\r\n                        <Text style={styles.showHourText}>Rappel du midi : {this.state.midiHour !== null ? this.state.midiHour : \"Cliquez pour ajouter\"}</Text>\r\n                    </TouchableOpacity>}\r\n                    {this.state.soir && <TouchableOpacity\r\n                        style={styles.showHour}\r\n                        onPress={() => {\r\n                            this.setState({ isOpenTime: true, type: \"soir\" })\r\n                        }}\r\n                    >\r\n                        <Text style={styles.showHourText}>Rappel du soir : {this.state.soirHour !== null ? this.state.soirHour : \"Cliquez pour ajouter\"}</Text>\r\n                    </TouchableOpacity>}\r\n                    <TouchableOpacity\r\n                        style={styles.buttonSave}\r\n                        onPress={() => {\r\n                            this.onClickUpdateRappel()\r\n                        }}\r\n                    >\r\n                        <Text style={styles.docText2}>Sauvegarder le rappel</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#008AC8\"\r\n    },\r\n    under3: {\r\n        flexDirection: 'row',\r\n        paddingTop: 40,\r\n        width: wp('100%'),\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\r\n\r\n    },\r\n    link: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        paddingLeft: wp('25%'),\r\n        paddingTop: hp(\"7%\"),\r\n        paddingBottom: hp(\"1%\")\r\n    },\r\n    imgLink: {\r\n        width: wp('15%'),\r\n        height: wp('15%'),\r\n        backgroundColor: '#008AC8',\r\n        borderRadius: 400 / 2,\r\n        marginRight: wp('2%')\r\n    },\r\n    imgText: {\r\n        color: \"white\",\r\n        fontSize: 24\r\n    },\r\n    docView: {\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        paddingTop: hp(\"2%\"),\r\n        paddingBottom: hp(\"2%\"),\r\n    },\r\n    docButton: {\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderWidth: 1,\r\n        borderColor: \"white\",\r\n        borderStyle: 'dashed',\r\n        borderRadius: 1,\r\n        paddingTop: hp(\"2%\"),\r\n        paddingBottom: hp(\"2%\"),\r\n        width: wp('70%')\r\n    },\r\n    docText: {\r\n        color: \"white\"\r\n    },\r\n    buttonSave: {\r\n        backgroundColor: \"#00C1B4\",\r\n        marginTop: hp('5%'),\r\n        width: wp('70%'),\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        paddingTop: hp(\"2%\"),\r\n        paddingBottom: hp(\"2%\"),\r\n\r\n    },\r\n    docText2: {\r\n        color: \"white\",\r\n        fontSize: 18\r\n\r\n    },\r\n    viewButtons: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: hp(\"4%\")\r\n    },\r\n    viewButton: {\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        paddingTop: hp('1%'),\r\n        paddingBottom: hp('1%'),\r\n        paddingLeft: wp('2%'),\r\n        paddingRight: wp('2%'),\r\n        borderWidth: 1,\r\n        borderColor: \"white\"\r\n    },\r\n    viewButtonSelected: {\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        paddingTop: hp('1%'),\r\n        paddingBottom: hp('1%'),\r\n        paddingLeft: wp('2%'),\r\n        paddingRight: wp('2%'),\r\n        borderWidth: 1,\r\n        borderColor: \"white\",\r\n        backgroundColor: \"white\"\r\n    },\r\n    docTextSelected: {\r\n        color: \"#00C1B4\"\r\n    },\r\n    checkbox: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginTop: hp('5%'),\r\n        color: \"white\"\r\n    },\r\n    showHour: {\r\n        marginTop: hp(\"2%\"),\r\n        marginBottom: hp(\"2%\"),\r\n    },\r\n    showHourText: {\r\n        color: \"white\",\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: \"white\"\r\n    }\r\n});\r\n\r\n\r\n\r\nconst mapStateToProps = (store) => {\r\n    return {\r\n        user: store.user,\r\n        contact: store.contact,\r\n        favorite: store.favorite,\r\n        second: store.second\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Rappel);"]},"metadata":{},"sourceType":"module"}